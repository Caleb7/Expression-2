@name snow's mech chip
@persist FORCESTEP:angle STEPDIP STEPPER STEPCYCLE HOLOARRAY:array SPAWNNUM ANIMTURNRATE ANIMRATEFEET XSCALE YSCALE  LIGHTS COLOR3:vector PLAYERTIMER 
@persist MM DOOROPEN DOORANG ENGV USERTOGGLE SONGSELECT CRASH STARTTIMER STABALIZER LASTPLAYED MUSV STEP:entity STRINGARRAY:array SONGDURATIONS:array 
@persist COLOR:vector COLOR2:vector STRAFE ENTITIES NOCOLLIDE M SEAT:entity PASSENGERSEAT:entity SEAT2:entity PASSENGERSEAT2:entity SCALE  HEIGHTADD 
@persist OVERSTEER REVERSESLOWER BRAKES ANGLERELATIVEAREA LEAN RANGERSTABALIZATION Pos:vector Prop:entity HEIGHT ANGLERESIST FORCERESIST YAWRESIST F 
@persist T FB TURNRATE TRATE FRATE MAXSPEED ACCELERATION N HEIGHT2 JUMP JUMPPOWER
#@model models/sprops/cuboids/height24/size_4/cube_96x240x24.mdl

if( first() ) {
    SCALE=1
    HEIGHT=150
    HEIGHT2=15
    Prop=entity()
    FORCERESIST=0.3
    YAWRESIST=1
    MAXSPEED=2000
    TURNRATE=100
    ACCELERATION=40
    Prop:setMass(5000)
    ANGLERELATIVEAREA=40
    RANGERSTABALIZATION=1
    LEAN=-10
    OVERSTEER=0.5 #1.1
    HEIGHTADD=1
    REVERSESLOWER=3
    BRAKES=2
    ENTITIES=1
    NOCOLLIDE=0
    JUMPPOWER=600
    COLOR=vec(255,180,75)
    COLOR2=vec(255,160,70)
    COLOR3=vec(255,255,255)
    STEPDIP=50
    ENGV=0.3
    MUSV=0.4
    STABALIZER=0.5
    Prop:propSetBuoyancy(0)
    Prop:propInertia(vec(300,300,300))
    Prop:setAlpha(255)
    Prop:propPhysicalMaterial("metalvehicle")
    rangerHitEntities(1)
    rangerHitWater(0)
    findAllowPlayer(owner())
    findIncludeClass("Vehicle")
    findInSphere(entity():pos(),10000)
    SEAT=findClosest(Prop:pos())
    SEAT:setAng(Prop:toWorld(ang(0,-90,0)))
    SEAT:setMass(1)
    SEAT:propDrag(0)
    SEAT:propGravity(0)
    
    SPAWNNUM = 1
    HOLOARRAY=array(
        entity():toWorld(vec(0,0,0)),vec(20.5,8.5,3),entity():toWorld(ang(0,0,0)),vec(255,255,255),"rcube",entity(),
        entity():toWorld(vec(0,0,0)),vec(20.6,8.6,2.5),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",entity(),
        holoEntity(2):toWorld(vec(0,0,1)),vec(3,2.6+1,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(2),
        holoEntity(3):toWorld(vec(0,0,1)),vec(3,2.6+1,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(3),
        holoEntity(4):toWorld(vec(0,0,1)),vec(3,2.6+1,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(4),
        holoEntity(5):toWorld(vec(0,0,1)),vec(3,2.6+1,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(5),
        holoEntity(2):toWorld(vec(0,0,1.5)),vec(3.1,2.5+1,1),entity():toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(2),
        holoEntity(3):toWorld(vec(0,0,1.5)),vec(3.1,2.5+1,1),entity():toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(3),
        holoEntity(4):toWorld(vec(0,0,1.5)),vec(3.1,2.5+1,1),entity():toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(4),
        holoEntity(5):toWorld(vec(0,0,1.5)),vec(3.1,2.5+1,1),entity():toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(5),
        holoEntity(6):toWorld(vec(0,0,1)),vec(3,2+2,3),holoEntity(6):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(6),
        holoEntity(7):toWorld(vec(0,0,1)),vec(3,2+2,3),holoEntity(7):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(7),
        holoEntity(8):toWorld(vec(0,0,1)),vec(3,2+2,3),holoEntity(8):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(8),
        holoEntity(9):toWorld(vec(0,0,1)),vec(3,2+2,3),holoEntity(9):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(9),
        holoEntity(6):toWorld(vec(0,0,1)),vec(3.1,1.5+2,3.1),holoEntity(6):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(6),
        holoEntity(7):toWorld(vec(0,0,1)),vec(3.1,1.5+2,3.1),holoEntity(7):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(7),
        holoEntity(8):toWorld(vec(0,0,1)),vec(3.1,1.5+2,3.1),holoEntity(8):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(8),
        holoEntity(9):toWorld(vec(0,0,1)),vec(3.1,1.5+2,3.1),holoEntity(9):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(9),
        holoEntity(6):toWorld(vec(-45,0,0)),vec(6,1.5+2,2),holoEntity(6):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(6),
        holoEntity(7):toWorld(vec(-45,0,0)),vec(6,1.5+2,2),holoEntity(7):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(7),
        holoEntity(8):toWorld(vec(-45,0,0)),vec(6,1.5+2,2),holoEntity(8):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(8),
        holoEntity(9):toWorld(vec(-45,0,0)),vec(6,1.5+2,2),holoEntity(9):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(9),
        holoEntity(6):toWorld(vec(-45,0,0)),vec(6.1,1+2,2.1),holoEntity(6):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(6),
        holoEntity(7):toWorld(vec(-45,0,0)),vec(6.1,1+2,2.1),holoEntity(7):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(7),
        holoEntity(8):toWorld(vec(-45,0,0)),vec(6.1,1+2,2.1),holoEntity(8):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(8),
        holoEntity(9):toWorld(vec(-45,0,0)),vec(6.1,1+2,2.1),holoEntity(9):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(9),
        holoEntity(10):toWorld(vec(8,0,1)),vec(3,2+2,3),holoEntity(10):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(10),
        holoEntity(11):toWorld(vec(8,0,1)),vec(3,2+2,3),holoEntity(11):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(11),
        holoEntity(12):toWorld(vec(8,0,1)),vec(3,2+2,3),holoEntity(12):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(12),
        holoEntity(13):toWorld(vec(8,0,1)),vec(3,2+2,3),holoEntity(13):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(13),
        holoEntity(10):toWorld(vec(8,0,1)),vec(3.1,1.5+2,3.1),holoEntity(10):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(10),
        holoEntity(11):toWorld(vec(8,0,1)),vec(3.1,1.5+2,3.1),holoEntity(11):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(11),
        holoEntity(12):toWorld(vec(8,0,1)),vec(3.1,1.5+2,3.1),holoEntity(12):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(12),
        holoEntity(13):toWorld(vec(8,0,1)),vec(3.1,1.5+2,3.1),holoEntity(13):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(13),
        holoEntity(10):toWorld(vec(-30,0,0)),vec(6,1.5+2,1.5),holoEntity(10):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(10),
        holoEntity(11):toWorld(vec(-30,0,0)),vec(6,1.5+2,1.5),holoEntity(11):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(11),
        holoEntity(12):toWorld(vec(-40,0,10)),vec(6,1.5+2,1.5),holoEntity(12):toWorld(ang(25,0,0)),vec(255,255,255),"rcube",holoEntity(12),
        holoEntity(13):toWorld(vec(-40,0,10)),vec(6,1.5+2,1.5),holoEntity(13):toWorld(ang(25,0,0)),vec(255,255,255),"rcube",holoEntity(13),
        holoEntity(10):toWorld(vec(-30,0,5)),vec(6.1,1+2,1.5),holoEntity(10):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(10),
        holoEntity(11):toWorld(vec(-30,0,5)),vec(6.1,1+2,1.5),holoEntity(11):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(11),
        holoEntity(12):toWorld(vec(-40,0,15)),vec(6.1,1+2,1.5),holoEntity(12):toWorld(ang(25,0,0)),vec(100,100,100),"rcube",holoEntity(12),
        holoEntity(13):toWorld(vec(-40,0,15)),vec(6.1,1+2,1.5),holoEntity(13):toWorld(ang(25,0,0)),vec(100,100,100),"rcube",holoEntity(13),
        holoEntity(2):toWorld(vec(-25,0,10)),vec(3.1,1+2,2.1),holoEntity(2):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(2),
        holoEntity(3):toWorld(vec(-25,0,10)),vec(3.1,1+2,2.1),holoEntity(3):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(3),
        holoEntity(4):toWorld(vec(-10,0,20)),vec(3.1,1+2,3.1),holoEntity(4):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(4),
        holoEntity(5):toWorld(vec(-10,0,20)),vec(3.1,1+2,3.1),holoEntity(5):toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(5),
        holoEntity(2):toWorld(vec(-25,0,10)),vec(3,1.5+2,2),holoEntity(2):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(2),
        holoEntity(3):toWorld(vec(-25,0,10)),vec(3,1.5+2,2),holoEntity(3):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(3),
        holoEntity(4):toWorld(vec(-10,0,20)),vec(3,1.5+2,3),holoEntity(4):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(4),
        holoEntity(5):toWorld(vec(-10,0,20)),vec(3,1.5+2,3),holoEntity(5):toWorld(ang(0,0,0)),vec(255,255,255),"rcube",holoEntity(5),
        holoEntity(2):toWorld(vec(3,12,3)),vec(3.1,0.5,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(2),
        holoEntity(3):toWorld(vec(3,12,3)),vec(3.1,0.5,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(3),
        holoEntity(4):toWorld(vec(3,12,3)),vec(3.1,0.5,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(4),
        holoEntity(5):toWorld(vec(3,12,3)),vec(3.1,0.5,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(5),
        holoEntity(2):toWorld(vec(3,4,3)),vec(3.1,0.5,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(2),
        holoEntity(3):toWorld(vec(3,4,3)),vec(3.1,0.5,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(3),
        holoEntity(4):toWorld(vec(3,4,3)),vec(3.1,0.5,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(4),
        holoEntity(5):toWorld(vec(3,4,3)),vec(3.1,0.5,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(5),
        holoEntity(2):toWorld(vec(3,-4,3)),vec(3.1,0.5,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(2),
        holoEntity(3):toWorld(vec(3,-4,3)),vec(3.1,0.5,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(3),
        holoEntity(4):toWorld(vec(3,-4,3)),vec(3.1,0.5,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(4),
        holoEntity(5):toWorld(vec(3,-4,3)),vec(3.1,0.5,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(5),
        holoEntity(2):toWorld(vec(3,-12,3)),vec(3.1,0.5,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(2),
        holoEntity(3):toWorld(vec(3,-12,3)),vec(3.1,0.5,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(3),
        holoEntity(4):toWorld(vec(3,-12,3)),vec(3.1,0.5,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(4),
        holoEntity(5):toWorld(vec(3,-12,3)),vec(3.1,0.5,1),entity():toWorld(ang(0,0,0)),vec(100,100,100),"rcube",holoEntity(5)
    )
}

interval( 40 )

if( clk() ) {
    if( changed( time( "sec" ) ) & PLAYERTIMER !=0 ) {
        PLAYERTIMER -= 1
    }
    
    if( CRASH > 0 ) {
        CRASH -= 1
    }
    
    if( changed( owner():keyPressed("backspace") ) & owner():keyPressed( "backspace" ) == 1 ) {
        USERTOGGLE++
    } 
    if( USERTOGGLE > 1 ) { 
        USERTOGGLE = 0
    }
    
    if( changed( USERTOGGLE ) ) {
        hint( "user can drive> " + USERTOGGLE, 1000 )
    }

    DOOROPEN=0
    
    MPH=round(toUnit("mph",Prop:vel():length()))  #print(MPH)
    
    R=rangerOffset(Prop:toWorld(vec(0,0,HEIGHT2*(SCALE))),Prop:toWorld(+vec(0,0,-HEIGHT*4)))
    RF=rangerOffset(Prop:toWorld(vec(ANGLERELATIVEAREA,0,HEIGHT2)),Prop:toWorld(vec(ANGLERELATIVEAREA,0,-HEIGHT*4)))
    RB=rangerOffset(Prop:toWorld(vec(-ANGLERELATIVEAREA,0,HEIGHT2)),Prop:toWorld(vec(-ANGLERELATIVEAREA,0,-HEIGHT*4)))
    RR=rangerOffset(Prop:toWorld(vec(0,ANGLERELATIVEAREA,HEIGHT2)),Prop:toWorld(vec(0,ANGLERELATIVEAREA,-HEIGHT*4)))
    RL=rangerOffset(Prop:toWorld(vec(0,-ANGLERELATIVEAREA,HEIGHT2)),Prop:toWorld(vec(0,-ANGLERELATIVEAREA,-HEIGHT*4)))
    
    if( SEAT:driver():model() != "" & USERTOGGLE == 1 & CRASH == 0 | SEAT:driver() == owner() & CRASH == 0 ){
    if(STEPCYCLE==0){FORCESTEP=ang(0,0,0)}
    if(STEPCYCLE==1){FORCESTEP=ang(6,0,-6)}
    if(STEPCYCLE==2){FORCESTEP=ang(6,0,6)}
    if(STEPCYCLE==3){FORCESTEP=ang(-6,0,6)}
    if(STEPCYCLE==4){FORCESTEP=ang(-6,0,-6)}
    
    SWAYANG=( ang( RB:distance() - RF:distance() + ( F * -LEAN ), 0, RR:distance() - RL:distance() + ( TRATE * -LEAN) ) + ( FORCESTEP * LEAN ) )
    
    if( R:distance() < HEIGHT * 4 ) {
        Pos = Prop:toWorld( vec( 0, 0, ( ( HEIGHT * 2 ) / 2 ) + ( ( ( HEIGHT * HEIGHTADD ) / 2 ) * ( abs( MPH ) / 844 ) ) - R:distance( ) ) )
    } else {
        Pos = Prop:pos( ) + vec( 0, 0, ( ( HEIGHT * 2 ) / 2 ) + ( ( ( HEIGHT * HEIGHTADD ) / 2 ) * ( abs( MPH ) / 844 ) ) - R:distance() ) 
    }
    
    if( SEAT:driver():keyAttack2() == 0 ) {
        if(SEAT:driver():keyPressed("w")==0&SEAT:driver():keyPressed("s")==0){
        
        if(MPH<20&FRATE>0){FRATE-=FRATE/10 } 
        if(MPH<10){if(abs(FRATE)>400){CRASH=50} FRATE=FRATE*-0.1 FB=1}
        }
        if(changed(SEAT:driver():keyPressed("w"))&SEAT:driver():keyPressed("w")==1){F=1 Prop:soundPlay(1,0,"ambient/desert_wind_low.wav") Prop:soundPlay(3,0,"ambient/levels/citadel/zapper_ambient_loop1.wav") }
        
        if(changed(SEAT:driver():keyPressed("s"))&SEAT:driver():keyPressed("s")==1){F=-1 Prop:soundPlay(1,0,"ambience/mechwhine.wav") }
        if(changed(SEAT:driver():keyPressed("t"))&SEAT:driver():keyPressed("t")==1){LIGHTS++} if(LIGHTS>1){LIGHTS=0}
        
        F-=F/20
        if(SEAT:driver():keyPressed("w")&R:distance()<HEIGHT*4){FRATE+=ACCELERATION}
        if(SEAT:driver():keyPressed("s")&R:distance()<HEIGHT*4){if(FRATE>-MAXSPEED/REVERSESLOWER){FRATE-=ACCELERATION/2*BRAKES}}
        if(FRATE>MAXSPEED&SEAT:driver():keySprint()==0){FRATE=MAXSPEED}
        if(FRATE<-MAXSPEED/REVERSESLOWER){FRATE=-MAXSPEED/REVERSESLOWER}
        
        T=0 
        if(SEAT:driver():keyPressed("a")){T=1}
        if(SEAT:driver():keyPressed("d")){T=-1}
        if(SEAT:driver():keyPressed("d")==0&SEAT:driver():keyPressed("a")==0){T=0 
          TRATE-=TRATE/1.5 
        }
        STRAFE=0
        if(SEAT:driver():keyPressed("d")&FRATE<1&SEAT:driver():keyJump()){STRAFE=70 T=0}
        if(SEAT:driver():keyPressed("a")&FRATE<1&SEAT:driver():keyJump()){STRAFE=-70 T=0}
        
        TRATE+=T*0.2
        if(TRATE<-1){TRATE=-1}
        if(TRATE>1){TRATE=1}
        if(FRATE>3){FB=1}
        if(FRATE<-3){FB=-1}
        if(SEAT:driver():keyJump()&R:distance()<HEIGHT*4|SEAT:driver():model()==""){FB=1 FRATE-=FRATE/10}
        if(R:distance()<HEIGHT*4){
        Prop:applyForce(((((Pos-Prop:pos())*4) - (Prop:vel()*vec(STABALIZER,STABALIZER,STABALIZER)))*Prop:mass())*vec(1,1,1)+(Prop:forward()*FRATE*(SCALE)*Prop:mass())+(Prop:right()*STRAFE*Prop:mass())+(Prop:up()*-STEPDIP*Prop:mass()*STEPPER))
        }
        Prop:applyAngForce(((( -Prop:angVel()*FORCERESIST)*Prop:mass())*ang(1,0,1)+ang(0,(-Prop:mass()*Prop:angVel()):yaw()*YAWRESIST,0))+(ang(0,TRATE*TURNRATE*Prop:mass()*FB-FRATE/MAXSPEED*OVERSTEER,0))+(SWAYANG*ang(1,0,1)*-RANGERSTABALIZATION*Prop:mass()))
        JUMP=JUMPPOWER
        if(changed(SEAT:driver():keyAttack1())&SEAT:driver():keyAttack1()==1){SEAT:hintDriver(MPH+" mph",1000)}
    } else {
        if(JUMP==JUMPPOWER&R:distance()>HEIGHT*4&vec(Prop:angles()*ang(0,0,1)):length()>80&MPH<10) {
            Prop:applyForce(Prop:pos()+(vec(0,0,JUMP*Prop:mass()))) JUMP=0
        }
        if(JUMP==JUMPPOWER&R:distance()<HEIGHT*4&vec(Prop:angles()*ang(0,0,1)):length()<100) { 
            Prop:applyForce(Prop:toWorld(vec(0,0,JUMP*Prop:mass()))) JUMP=0
        }
        if(Prop:angVelVector():length()<300&R:distance()>HEIGHT*2){
        if(SEAT:driver():keyPressed("w")){Prop:applyAngForce(ang(40*Prop:mass(),0,0))}    
        if(SEAT:driver():keyPressed("s")){Prop:applyAngForce(ang(-40*Prop:mass(),0,0)) FRATE-=FRATE/10}   
        } 
        if(Prop:angVelVector():length()<350&R:distance()>HEIGHT*2){
        if(SEAT:driver():keyPressed("a")){Prop:applyAngForce(ang(0,0,-40*Prop:mass()))} 
        if(SEAT:driver():keyPressed("d")){Prop:applyAngForce(ang(0,0,40*Prop:mass()))}     
        }
    }
    
    if(changed(SEAT:driver():keyAttack2())&SEAT:driver():keyAttack2()==1&R:distance()<HEIGHT*2){
        Prop:soundPlay(2,0,"replay/performancesaved.wav")
    }
    
    if(changed(SEAT:driver():keyAttack2()==0)&SEAT:driver():keyAttack2()==0==1){
        soundStop(2)
    }
    }
    else{soundStop(1) soundStop(2) soundStop(3) FRATE=0    Prop:propSetBuoyancy(1)}
    soundPitch(1,(100)*(abs(MPH)/200)+(100)+random(-1,1))
    soundVolume(1,ENGV*1)
    
    soundPitch(3,(100)*(abs(MPH)/200)+(100)+random(-1,1))
    soundVolume(3,ENGV*0.3)
    if(duped()){reset()}
    ###animation math
    ANIMRATEFEET+=((FRATE/MAXSPEED)*0.5+(abs(TRATE)*0.025))*1.5
    
    ###holos
    if(first()&holoRemainingSpawns()==80){M=0 N=0
    #decurves
    XSCALE=Prop:boxSize():x()/2+10+(-20)
    YSCALE=Prop:boxSize():y()/2+10
    #de bod    
    N++ holoCreate(N,Prop:toWorld(vec(0,0,0)),vec(1,1,1),Prop:toWorld(ang(0,0,0)),vec(255,255,255),"rcube") holoParent(N,Prop) holoAlpha(N,0)
    #de feet
    N++ holoCreate(N,holoEntity(1):toWorld(vec(XSCALE,YSCALE,0)),vec(1,1,1),Prop:toWorld(ang(0,0,0)),vec(255,0,0),"rcube") holoParent(N,holoEntity(1)) holoAlpha(N,0)
    N++ holoCreate(N,holoEntity(1):toWorld(vec(XSCALE,-YSCALE,0)),vec(1,1,1),Prop:toWorld(ang(0,0,0)),vec(255,0,0),"rcube") holoParent(N,holoEntity(1)) holoAlpha(N,0)
    N++ holoCreate(N,holoEntity(1):toWorld(vec(-XSCALE,YSCALE,0)),vec(1,1,1),Prop:toWorld(ang(0,0,0)),vec(255,0,0),"rcube") holoParent(N,holoEntity(1)) holoAlpha(N,0)
    N++ holoCreate(N,holoEntity(1):toWorld(vec(-XSCALE,-YSCALE,0)),vec(1,1,1),Prop:toWorld(ang(0,0,0)),vec(255,0,0),"rcube") holoParent(N,holoEntity(1)) holoAlpha(N,0)
    
    #de legs
    N++ holoCreate(N,Prop:toWorld(vec(XSCALE,YSCALE,0)),vec(1,1,1),Prop:toWorld(ang(0,0,0)),vec(0,255,0),"rcube") holoParent(N,Prop) holoAlpha(N,0)
    N++ holoCreate(N,Prop:toWorld(vec(XSCALE,-YSCALE,0)),vec(1,1,1),Prop:toWorld(ang(0,0,0)),vec(0,255,0),"rcube") holoParent(N,Prop) holoAlpha(N,0)
    N++ holoCreate(N,Prop:toWorld(vec(-XSCALE,YSCALE,0)),vec(1,1,1),Prop:toWorld(ang(0,0,0)),vec(0,255,0),"rcube") holoParent(N,Prop) holoAlpha(N,0)
    N++ holoCreate(N,Prop:toWorld(vec(-XSCALE,-YSCALE,0)),vec(1,1,1),Prop:toWorld(ang(0,0,0)),vec(0,255,0),"rcube") holoParent(N,Prop) holoAlpha(N,0)
    
    N++ holoCreate(N,holoEntity(1):toWorld(vec(XSCALE-XSCALE/2,YSCALE,XSCALE/2)),vec(1,1,1),Prop:toWorld(ang(0,0,0)),vec(0,0,255),"rcube") holoParent(N,Prop) holoAlpha(N,0)
    N++ holoCreate(N,holoEntity(1):toWorld(vec(XSCALE-XSCALE/2,-YSCALE,XSCALE/2)),vec(1,1,1),Prop:toWorld(ang(0,0,0)),vec(0,0,255),"rcube") holoParent(N,Prop) holoAlpha(N,0)
    N++ holoCreate(N,holoEntity(1):toWorld(vec(-XSCALE+XSCALE/2,YSCALE,XSCALE/2)),vec(1,1,1),Prop:toWorld(ang(0,0,0)),vec(0,0,255),"rcube") holoParent(N,Prop) holoAlpha(N,0)
    N++ holoCreate(N,holoEntity(1):toWorld(vec(-XSCALE+XSCALE/2,-YSCALE,XSCALE/2)),vec(1,1,1),Prop:toWorld(ang(0,0,0)),vec(0,0,255),"rcube") holoParent(N,Prop) holoAlpha(N,0)
    
    M=1
        }
    
    ###animation
    if(changed(round(Prop:pos()))|changed(round(Prop:angles()))){
    if(R:distance()<HEIGHT*1.7){
    holoPos(1,Prop:toWorld(vec(0,0,-HEIGHT+HEIGHT+20-R:distance())))
    holoAng(1,Prop:toWorld(ang(RF:distance()-RB:distance(),0,RL:distance()-RR:distance())))
    
    if(abs(FRATE/MAXSPEED)>0.5){STEPDIP=200
    #sprint
    holoPos(2,holoEntity(1):toWorld(vec(XSCALE+cos((ANIMRATEFEET+(7*1))*80)*-HEIGHT/6,YSCALE,HEIGHT/3+sin((ANIMRATEFEET+(7*1))*80)*HEIGHT/4)))
    holoPos(3,holoEntity(1):toWorld(vec(XSCALE+cos((ANIMRATEFEET+(7*1))*80)*-HEIGHT/6,-YSCALE,HEIGHT/3+sin((ANIMRATEFEET+(7*1))*80)*HEIGHT/4)))
    holoPos(4,holoEntity(1):toWorld(vec(-XSCALE+sin((ANIMRATEFEET+(8*1))*-80)*-HEIGHT/7,YSCALE,HEIGHT/3+cos((ANIMRATEFEET+(8*1))*80)*HEIGHT/4)))
    holoPos(5,holoEntity(1):toWorld(vec(-XSCALE+sin((ANIMRATEFEET+(8*1))*-80)*-HEIGHT/7,-YSCALE,HEIGHT/3+cos((ANIMRATEFEET+(8*1))*80)*HEIGHT/4)))
    }
    if(abs(FRATE/MAXSPEED)<0.5){STEPDIP=50
        
    #walk
    holoPos(2,holoEntity(1):toWorld(vec(XSCALE+cos((ANIMRATEFEET+(54*4))*175)*-HEIGHT/6,YSCALE,HEIGHT/4.5+sin((ANIMRATEFEET+(54*4))*175)*HEIGHT/4.5)))
    holoPos(3,holoEntity(1):toWorld(vec(XSCALE+cos((ANIMRATEFEET+(54*3))*175)*-HEIGHT/6,-YSCALE,HEIGHT/4.5+sin((ANIMRATEFEET+(54*3))*175)*HEIGHT/4.5)))
    holoPos(4,holoEntity(1):toWorld(vec(-XSCALE+cos((ANIMRATEFEET+(54*2))*175)*-HEIGHT/7,YSCALE,HEIGHT/4.5+sin((ANIMRATEFEET+(54*2))*175)*HEIGHT/4.5)))
    holoPos(5,holoEntity(1):toWorld(vec(-XSCALE+cos((ANIMRATEFEET+(54*1))*175)*-HEIGHT/7,-YSCALE,HEIGHT/4.5+sin((ANIMRATEFEET+(54*1))*175)*HEIGHT/4.5)))
    }
    if(abs(FRATE/MAXSPEED)<0.05){STEPDIP=50
    #still
    holoPos(2,holoEntity(1):toWorld(vec(XSCALE,YSCALE,0)))
    holoPos(3,holoEntity(1):toWorld(vec(XSCALE,-YSCALE,0)))
    holoPos(4,holoEntity(1):toWorld(vec(-XSCALE,YSCALE,0)))
    holoPos(5,holoEntity(1):toWorld(vec(-XSCALE,-YSCALE,0)))
    }
    }
    else{
    holoPos(2,holoEntity(1):toWorld(vec(XSCALE,YSCALE,HEIGHT/2)))
    holoPos(3,holoEntity(1):toWorld(vec(XSCALE,-YSCALE,HEIGHT/2)))
    holoPos(4,holoEntity(1):toWorld(vec(-XSCALE,YSCALE,0)))
    holoPos(5,holoEntity(1):toWorld(vec(-XSCALE,-YSCALE,0)))
    holoPos(1,Prop:toWorld(vec(0,0,-HEIGHT)))
    holoAng(1,Prop:toWorld(ang(0,0,0)))    
        }
    
    holoPos(10,Prop:toWorld(vec(XSCALE/2+holoEntity(2):pos():distance(holoEntity(6):pos())/-16,YSCALE,holoEntity(2):pos():distance(holoEntity(6):pos())/-2))) 
    holoPos(11,Prop:toWorld(vec(XSCALE/2+holoEntity(2):pos():distance(holoEntity(6):pos())/-16,-YSCALE,holoEntity(3):pos():distance(holoEntity(7):pos())/-2)))    
    holoPos(12,Prop:toWorld(vec(-XSCALE/2+holoEntity(2):pos():distance(holoEntity(6):pos())/16,YSCALE,holoEntity(4):pos():distance(holoEntity(8):pos())/-2)))    
    holoPos(13,Prop:toWorld(vec(-XSCALE/2+holoEntity(2):pos():distance(holoEntity(6):pos())/16,-YSCALE,holoEntity(5):pos():distance(holoEntity(9):pos())/-2)))       
    
    holoAng(6,(holoEntity(6):pos()-holoEntity(10):pos()):toAngle()*ang(1,1,0))
    holoAng(7,(holoEntity(7):pos()-holoEntity(11):pos()):toAngle()*ang(1,1,0))
    holoAng(8,(holoEntity(8):pos()-holoEntity(12):pos()):toAngle()*ang(1,1,0))
    holoAng(9,(holoEntity(9):pos()-holoEntity(13):pos()):toAngle()*ang(1,1,0))
    
    
    holoAng(10,(holoEntity(10):pos()-holoEntity(2):pos()):toAngle()*ang(1,1,0))
    holoAng(11,(holoEntity(11):pos()-holoEntity(3):pos()):toAngle()*ang(1,1,0))
    holoAng(12,(holoEntity(12):pos()-holoEntity(4):pos()):toAngle()*ang(1,1,0))
    holoAng(13,(holoEntity(13):pos()-holoEntity(5):pos()):toAngle()*ang(1,1,0))
    STEPPER=0
    STEPCYCLE=0
    if(changed(holoEntity(1):toWorld(vec(XSCALE,YSCALE,0)):distance(holoEntity(2):pos())<20)&holoEntity(1):toWorld(vec(XSCALE,YSCALE,0)):distance(holoEntity(2):pos())<20==1){holoEntity(2):soundPlay(1,0,"physics/metal/metal_barrel_impact_hard6.wav",0.654) STEPPER=1 STEPCYCLE=1}
    if(changed(holoEntity(1):toWorld(vec(XSCALE,-YSCALE,0)):distance(holoEntity(3):pos())<20)&holoEntity(1):toWorld(vec(XSCALE,-YSCALE,0)):distance(holoEntity(3):pos())<20==1){holoEntity(3):soundPlay(1,0,"physics/metal/metal_barrel_impact_hard6.wav",0.654) STEPPER=1 STEPCYCLE=2}
    if(changed(holoEntity(1):toWorld(vec(-XSCALE,YSCALE,0)):distance(holoEntity(4):pos())<20)&holoEntity(1):toWorld(vec(-XSCALE,YSCALE,0)):distance(holoEntity(4):pos())<20==1){holoEntity(4):soundPlay(1,0,"physics/metal/metal_barrel_impact_hard6.wav",0.654) STEPPER=1 STEPCYCLE=3}
    if(changed(holoEntity(1):toWorld(vec(-XSCALE,-YSCALE,0)):distance(holoEntity(5):pos())<20)&holoEntity(1):toWorld(vec(-XSCALE,-YSCALE,0)):distance(holoEntity(5):pos())<20==1){holoEntity(5):soundPlay(1,0,"physics/metal/metal_barrel_impact_hard6.wav",0.654) STEPPER=1 STEPCYCLE=4}
    
    }
}

if( SPAWNNUM < 1 + HOLOARRAY:count() & holoRemainingSpawns() > 5 ) {
    for( BM = 1, 5 ) {
        N++
        holoCreate(
            N,
            HOLOARRAY[SPAWNNUM+0,vector],
            HOLOARRAY[SPAWNNUM+1,vector],
            HOLOARRAY[SPAWNNUM+2,angle],
            HOLOARRAY[SPAWNNUM+3,vector],
            HOLOARRAY[SPAWNNUM+4,string]
        ) 
        holoParent(N,HOLOARRAY[SPAWNNUM+5,entity])
        SPAWNNUM+=6
    }
}



















