# ____                                      __               __  __          ___                                                                      __          ___                   
#/\  _ `.                                  /\ \             /\ \/\ \        /\_ \                                                 /'\_/`\            /\ \        /\_ \                  
#\ \ \/\ \  _ __    __     __      ___ ___ \ \/      ____   \ \ \_\ \    ___\//\ \     ___      __   _ __    __      ___ ___     /\      \    ___    \_\ \     __\//\ \      __   _ __  
# \ \ \ \ \/\`'__\/'__`\ /'__`\  /' __` __`\\/      /',__\   \ \  _  \  / __`\\ \ \   / __`\  /'_ `\/\`'__\/'__`\  /' __` __`\   \ \ \__\ \  / __`\  /'_` \  /'__`\\ \ \   /'__`\/\`'__\
#  \ \ \_\ \ \ \//\  __//\ \L\.\_/\ \/\ \/\ \      /\__, `\   \ \ \ \ \/\ \L\ \\_\ \_/\ \L\ \/\ \L\ \ \ \//\ \L\.\_/\ \/\ \/\ \   \ \ \_/\ \/\ \L\ \/\ \L\ \/\  __/ \_\ \_/\  __/\ \ \/ 
#   \ \____/\ \_\\ \____\ \__/.\_\ \_\ \_\ \_\     \/\____/    \ \_\ \_\ \____//\____\ \____/\ \____ \ \_\\ \__/.\_\ \_\ \_\ \_\   \ \_\\ \_\ \____/\ \___,_\ \____\/\____\ \____\\ \_\ 
#    \/___/  \/_/ \/____/\/__/\/_/\/_/\/_/\/_/      \/___/      \/_/\/_/\/___/ \/____/\/___/  \/___L\ \/_/ \/__/\/_/\/_/\/_/\/_/    \/_/ \/_/\/___/  \/__,_ /\/____/\/____/\/____/ \/_/ 
#                                                                                               /\____/                                                                                 
#                                                                                               \_/__/
# Hologram Modeler File Output
# Modeler version: v4
# Date: 11/11/2018 @ 199
# Holograms: 11
# Hologram Notes:   
#                   1: anchor
#                   1: anchor
#                   2: pivor, yaw only
#                   8: pivot, pitch and yaw

@name turret03
@inputs
@outputs
@persist [ HologramModel HologramPosition HologramAngle HologramScale HologramColor HologramAlpha HologramMaterial HologramSkin  HologramParent HologramNote ]:array
@persist [ HoloCounter SetupComplete ]:number
#@persist [ Me Chip Target ]:entity
#@persist 

interval( 25 )

if( first() ) {

    #include "lib/dream"
    
    runOnChat( 1 )
    
    Me = owner()
    Chip = entity()
    
    Power = 0
    Arc = 1
    Target = owner()
    
    # DO NOT EDIT THIS SECTION UNLESS YOU KNOW WHAT YOU ARE DOING, OR IT MAY NOT PARSE IN MODELER CORRECTLY!
    SetupComplete = 0
    HoloCounter = 0
    HologramModel = array("models/holograms/hq_cylinder.mdl","models/holograms/hq_cylinder.mdl","models/holograms/cube.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_cylinder.mdl","models/holograms/cube.mdl","models/holograms/rcube_thick.mdl","models/holograms/cube.mdl","models/holograms/hq_tube_thin.mdl","models/holograms/hq_tube_thin.mdl","models/holograms/hq_tube.mdl")
    HologramPosition = array(vec(0,0,0.0001),vec(0,0,2.9601),vec(0,-7.0166,4.6003),vec(-6.3071,-7.0264,10.9099),vec(-6.3071,7.0264,10.9099),vec(0,7.0166,4.6003),vec(-3.9038,0,15.3098),vec(-3.9038,0,15.3098),vec(7.9619,0,22.1603),vec(20.9492,0,29.6583),vec(31.3384,0,35.657))
    HologramAngle = array(ang(360,0,0),ang(0,0,0),ang(0,90,45),ang(90,90,0),ang(90,90,0),ang(0,90,45),ang(30,180,0),ang(30,-180,0),ang(60,0,-180),ang(60,0,-180),ang(60,0,-180))
    HologramScale = array(vec(4,4,0.5),vec(3,3,0.5),vec(0.5,1.5,1.5),vec(1.5,1.5,0.5),vec(1.5,1.5,0.5),vec(0.5,1.5,1.5),vec(2,0.65,0.65),vec(0.1,0.1,0.1),vec(0.3,0.3,1),vec(0.26,0.26,2),vec(0.35,0.35,0.35))
    HologramColor = array(vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255))
    HologramAlpha = array(255,255,255,255,255,255,255,255,255,255,255)
    HologramMaterial = array("sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3")
    HologramSkin = array(0,0,0,0,0,0,0,0,0,0,0)
    HologramParent = array(0,1,2,2,2,2,8,2,8,8,8)
    HologramNote = array("anchor","pivor, yaw only","","","","","","pivot, pitch and yaw","","","")
    # DO NOT EDIT THIS SECTION UNLESS YOU KNOW WHAT YOU ARE DOING, OR IT MAY NOT PARSE IN MODELER CORRECTLY!

    function setup() {
        HoloCounter++
        holoCreate( HoloCounter, Chip:pos() + HologramPosition[ HoloCounter, vector ], HologramScale[ HoloCounter, vector ], HologramAngle[ HoloCounter, angle ], HologramColor[ HoloCounter, vector ], HologramModel[ HoloCounter, string ] )
        holoMaterial( HoloCounter, HologramMaterial[ HoloCounter, string ] )
        holoSkin( HoloCounter, HologramSkin[ HoloCounter, number ] )
        holoAlpha( HoloCounter, HologramAlpha[ HoloCounter, number ] )
        if( HoloCounter == HologramModel:count() ) {
            for( I = 1, HoloCounter ) {
                if( HologramParent[ I, number ] > 0 ) {
                    holoParent( I, HologramParent[ I, number ] )
                }
            }
            SetupComplete = 1
        }
    }
    timer( "setup", 1 )
}

if( clk( "setup" ) ) {
    while( perf( 90 ) & HoloCounter < HologramModel:count() & holoCanCreate() ) {
        setup()
    }
    if( HoloCounter < HologramModel:count() ) {
        timer( "setup", 1 )
    }
}

if( SetupComplete == 1 ) {

    if( clk() ) {
        Power = 10
        while( isnan( trajectoryGetTimeToHit( holoEntity( 8 ):pos(), Target:pos(), Arc, Power ) ) ) {
            Power = Power + 1
        }
        local Angle = trajectoryGetAngleOfAttack( holoEntity( 8 ):pos(), Target:pos(), Arc, Power )
        holoAng( 8, Angle + ang( 180, 0, 0 ) )
        holoAng( 2, ( Angle * ang( 0, 1, 0 ) ) )
    }
    
    if( chatClk() ) {
        local P = lastSpoke()
        local S = P:lastSaid()
        local Param = S:explode(" ")
        local Command = Param[1, string]
        if( P == Me & Command:left(1) == "/") {
            hideChat(1)
            if (Command == "/t")            { Target = findPlayerByName(Param[2, string]) }
            elseif (Command == "/high")     { Arc = 1 }
            elseif (Command == "/low")      { Arc = -1 }
        }
    }
    
    if( keyClk() ) {
        local Player = keyClk()
        local Key = keyClkPressed()
        local Pressed = Player:keyPressed( Key ) ? 1 : 0
        if( Pressed & Key == "e" & Player == Me ) {
            local Bullet = bulletFire( holoEntity( 8 ):pos(), Target:pos(), Arc, Power, "models/sprops/geometry/sphere_3.mdl", 1 )
            Bullet:setTrails( 1, 1, 10, "trails/smoke", vec( 255, 0, 0 ), 255)
        }
    }
}
































