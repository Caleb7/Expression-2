# ----------------------------------------------------------------------------------------------------------------------------- #
# ____                                      __          __  __          ___                                                     #
#/\  _ `.                                  /\ \        /\ \/\ \        /\_ \                                                    #
#\ \ \/\ \  _ __    __     __      ___ ___ \ \/ ____   \ \ \_\ \    ___\//\ \     ___      __   _ __    __      ___ ___         #
# \ \ \ \ \/\`'__\/'__`\ /'__`\  /' __` __`\\/ /',__\   \ \  _  \  / __`\\ \ \   / __`\  /'_ `\/\`'__\/'__`\  /' __` __`\       #
#  \ \ \_\ \ \ \//\  __//\ \ \.\_/\ \/\ \/\ \ /\__, `\   \ \ \ \ \/\ \ \ \\_\ \_/\ \ \ \/\ \ \ \ \ \//\ \ \.\_/\ \/\ \/\ \      #
#   \ \____/\ \_\\ \____\ \__/.\_\ \_\ \_\ \_\\/\____/    \ \_\ \_\ \____//\____\ \____/\ \____ \ \_\\ \__/.\_\ \_\ \_\ \_\     #
#    \/___/  \/_/ \/____/\/__/\/_/\/_/\/_/\/_/ \/___/      \/_/\/_/\/___/ \/____/\/___/  \/___ \ \/_/ \/__/\/_/\/_/\/_/\/_/     #
#                                                                                          /\____/                              #
#                                                                                          \_/__/                               #
# ----------------------------------------------------------------------------------------------------------------------------- #
# Modeler Version: v5
# Date: 11/24/2018 @ 199
# Holograms: 
# Notes: 
# --------------------------------------------- #
@name tank_small
@persist Speed:number
@persist TargetIndicator:number
@persist GoTo:vector
#include "_/dream/lib/dream"

if( first( ) ) {
entity( ):setAlpha( 0 )
    Model = array("models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/mechanics/gears2/gear_18t3.mdl","models/holograms/rcube_thick.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_cylinder.mdl","models/holograms/cube.mdl","models/holograms/rcube_thick.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_sphere.mdl","models/props_phx/wheels/metal_wheel2.mdl")
    Position = array(vec(0,0,40),vec(0,13.9678,40.4424),vec(0,11.9707,38.749),vec(-8.7002,18.1904,38.7822),vec(-8.7002,16.6807,37.6318),vec(-8.7002,15.2412,36.6074),vec(-8.7002,14.3105,36.6074),vec(-8.7002,13.2998,36.6074),vec(-8.7002,12.4189,36.6074),vec(-8.7002,11.4883,36.6074),vec(-8.7002,10.5869,36.6074),vec(-8.7002,9.6563,36.6074),vec(-8.7002,8.665,36.6074),vec(-8.7002,7.7441,36.6074),vec(-8.7002,6.7031,36.6074),vec(-8.7002,5.6924,36.6074),vec(-8.7002,4.6807,36.6074),vec(-8.7002,3.7002,36.6074),vec(-8.7002,2.7793,36.6074),vec(-8.7002,1.8682,36.6074),vec(-8.7002,0.8369,36.6074),vec(-8.7002,-0.124,36.6074),vec(-8.7002,-1.0947,36.6074),vec(-8.7002,-2.0752,36.6074),vec(-8.7002,-3.0469,36.6074),vec(-8.7002,-4.0078,36.6074),vec(-8.7002,-12.6777,38.7822),vec(-8.7002,-11.0049,37.6318),vec(-8.7002,-4.998,36.6074),vec(-8.7002,-5.9697,36.6074),vec(-8.7002,-6.9004,36.6074),vec(-8.7002,-7.8906,36.6074),vec(-8.7002,-8.8223,36.6074),vec(-8.7002,-9.7129,36.6074),vec(-8.7002,17.2393,38.7822),vec(-8.7002,16.2881,38.7822),vec(-8.7002,15.3076,38.7822),vec(-8.7002,14.3369,38.7822),vec(-8.7002,13.376,38.7822),vec(-8.7002,12.375,38.7822),vec(-8.7002,11.374,38.7822),vec(-8.7002,10.3828,38.7822),vec(-8.7002,9.3516,38.7822),vec(-8.7002,8.3311,38.7822),vec(-8.7002,7.3398,38.7822),vec(-8.7002,6.3291,38.7822),vec(-8.7002,5.3477,38.7822),vec(-8.7002,4.3271,38.7822),vec(-8.7002,3.3359,38.7822),vec(-8.7002,2.3555,38.7822),vec(-8.7002,1.3438,38.7822),vec(-8.7002,0.3525,38.7822),vec(-8.7002,-0.6582,38.7822),vec(-8.7002,-1.6592,38.7822),vec(-8.7002,-2.6699,38.7822),vec(-8.7002,-3.6709,38.7822),vec(-8.7002,-4.6523,38.7822),vec(-8.7002,-5.6533,38.7822),vec(-8.7002,-6.6641,38.7822),vec(-8.7002,-7.6445,38.7822),vec(-8.7002,-8.6758,38.7822),vec(-8.7002,-9.6768,38.7822),vec(-8.7002,-10.668,38.7822),vec(-8.7002,-11.6885,38.7822),vec(8.7002,18.1904,38.7822),vec(8.7002,16.6807,37.6318),vec(8.7002,15.2412,36.6074),vec(8.7002,14.3105,36.6074),vec(8.7002,13.2998,36.6074),vec(8.7002,12.4189,36.6074),vec(8.7002,11.4883,36.6074),vec(8.7002,10.5869,36.6074),vec(8.7002,9.6563,36.6074),vec(8.7002,7.7441,36.6074),vec(8.7002,6.7031,36.6074),vec(8.7002,5.6924,36.6074),vec(8.7002,3.7002,36.6074),vec(8.7002,4.6807,36.6074),vec(8.7002,1.8682,36.6074),vec(8.7002,0.8369,36.6074),vec(8.7002,-0.124,36.6074),vec(8.7002,-1.0947,36.6074),vec(8.7002,-2.0752,36.6074),vec(8.7002,-3.0469,36.6074),vec(8.7002,-4.0078,36.6074),vec(8.7002,-12.6777,38.7822),vec(8.7002,-11.0049,37.6318),vec(8.7002,-4.998,36.6074),vec(8.7002,-5.9697,36.6074),vec(8.7002,-6.9004,36.6074),vec(8.7002,-7.8906,36.6074),vec(8.7002,-8.8223,36.6074),vec(8.7002,-9.7129,36.6074),vec(8.7002,17.2393,38.7822),vec(8.7002,16.2881,38.7822),vec(8.7002,15.3076,38.7822),vec(8.7002,14.3369,38.7822),vec(8.7002,13.376,38.7822),vec(8.7002,12.375,38.7822),vec(8.7002,11.374,38.7822),vec(8.7002,10.3828,38.7822),vec(8.7002,9.3516,38.7822),vec(8.7002,8.3311,38.7822),vec(8.7002,7.3398,38.7822),vec(8.7002,6.3291,38.7822),vec(8.7002,5.3477,38.7822),vec(8.7002,4.3271,38.7822),vec(8.7002,3.3359,38.7822),vec(8.7002,2.3555,38.7822),vec(8.7002,1.3438,38.7822),vec(8.7002,0.3525,38.7822),vec(8.7002,-0.6582,38.7822),vec(8.7002,-1.6592,38.7822),vec(8.7002,-2.6699,38.7822),vec(8.7002,-3.6709,38.7822),vec(8.7002,-4.6523,38.7822),vec(8.7002,-5.6533,38.7822),vec(8.7002,-6.6641,38.7822),vec(8.7002,-7.6445,38.7822),vec(8.7002,-8.6758,38.7822),vec(8.7002,-9.6768,38.7822),vec(8.7002,-10.668,38.7822),vec(8.7002,-11.6885,38.7822),vec(0,-3.209,45.2412),vec(1.8643,-1.3877,47.0059),vec(-2.5215,-3.8691,47.0059),vec(-1.2207,-6.168,47.8115),vec(3.165,-3.6865,47.8115),vec(0.9717,-4.9268,48.5557),vec(-0.061,-3.1016,49.2168),vec(-3.1558,2.3691,51.1982),vec(-5.4966,6.5059,52.6973),vec(-8.8813,12.4883,54.8643),vec(3.1831,8.6787,44.1426),vec(3.1831,8.6787,44.5625))
    IsPositionLocal = array(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
    Angle = array(ang(0,-90,0),ang(0,0,-17.5),ang(0,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(0,119.5,0),ang(0,29.5,-43),ang(0,29.5,-43),ang(90,29.5,0),ang(90,29.5,0),ang(17.5,-60.5,0),ang(72.5,119.5,0),ang(72.5,119.5,0),ang(72.5,119.5,0),ang(72.5,119.5,0),ang(0,0,0),ang(0,0,0))
    Scale = array(vec(2,1.2,0.7),vec(1.2,0.5,0.5),vec(1.2,0.8,0.5),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(0.13,0.13,0.13),vec(1.2,1.1,0.2),vec(0.15,0.4,0.2),vec(0.15,0.4,0.2),vec(0.4,0.4,0.15),vec(0.4,0.4,0.15),vec(0.1,0.1,0.1),vec(0.27,0.27,0.7),vec(0.15,0.15,0.5),vec(0.12,0.12,0.9),vec(0.1,0.1,0.9),vec(0.45,0.45,0.2),vec(0.03,0.03,0.03))
    IsScaleUnits = array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
    Color = array(vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255))
    Alpha = array
    Material = array("sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","sprops/textures/sprops_metal3","")
    Skin = array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
    Parent = array(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,124,124,124,124,124,129,129,129,129,1,1)
    Note = array("","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","")

    function setup( ) {
        runOnKeys( Me, 1 )
        runOnChat( 1 )
        Speed = 1
        TargetIndicator = randint( 2e8 )
        holoCreate( TargetIndicator, vec( ), vec( 1 ), ang( ) )
        holoModel( TargetIndicator, "hq_torus" )
        GoTo = entity( ):pos( )
        Arc = -1
    }
    
    
    function heProtecHeAtak( ) {
        GoTo = entity( ):pos( ) + ( randvec( ) * 5000 ):setZ( 0 )
        #async( 5, "heProtecHeAtak" )
    } heProtecHeAtak( )
    
    function angle slerpAng( O:angle, T:angle, S:number ) {
        local A = acos( O:forward( ):dot( T:forward( ) ) )
        return A > S ? slerp( quat( O ), quat( T ), S / acos( O:forward( ):dot( T:forward( ) ) ) ):toAngle() : T
    }

    function main( ) {
        
        Target = playerFindClosest( holoEntity( 1 ):pos( ) )
        
        if( GoTo:distance( holoEntity( 1 ):pos( ) ) > 50 ) {
            local A = slerpAng( holoEntity( 1 ):angles( ), ( GoTo - holoEntity( 1 ):pos( ) ):toAngle( ) + ang( 0, 180, 0 ), Speed * 2 )
            holoAng( 1, A )
            Speed = clamp( Speed + 0.1, 0, 5 )
        } else {
            heProtecHeAtak( )
        }
        
        if( Speed != 0 ) {
            for(I = 4, 123) { holoAng( I, holoEntity( I ):toWorld( ang( 0, -20 * Speed, 0 ) ) ) }
            if( Speed < 0 ) { Speed += 0.05 }
            if( Speed > 0 ) { Speed -= 0.05 }
        }
        
        local Ranger = rangerOffset( holoEntity( 1 ):pos( ) + vec( 0, 0, 40 ), holoEntity( 1 ):pos( ) + vec( 0, 0, -20000 ) )
        local DistanceToGround = Ranger:pos( ):distance( holoEntity( 1 ):pos( ) ) - 6.068
        holoPos( 1, ( Ranger:pos( ) + ( Ranger:hitNormal( ) * 6.6 ) ) + ( holoEntity( 1 ):forward( ) * -Speed ) )
        
        Power = 15
        while( isnan( trajectoryGetTimeToHit( holoEntity( 129 ):pos(), Target:pos( ), Arc, Power ) ) ) {
            Power = Power + 5
        }
        
        local Ang = trajectoryGetAngleOfAttack( holoEntity( 129 ):pos( ), Target:pos( ), Arc, Power )
        local GunAng = slerpAng( holoEntity( 129 ):angles( ), ang( -Ang:pitch( ), Ang:yaw( ), 0 ) + ang( 0, 180, 0 ), 6 )
        holoAng( 124, GunAng * ang( 0, 1, 0 ) )
        holoAng( 129, GunAng * ang( 1, 1, 0 ) )
        holoPos( TargetIndicator, Target:pos( ) )
    }
    
    function chat( Player:entity, Text:string ) {
        local P = Text:explode(" ")
        
        if( Text:left( 4 ) == "/high" ) {
            Arc = 1
            print( "high" )
        }
        if( Text:left( 3 ) == "/low" ) {
            Arc = -1
            print( "low" )
        }
    }
    
    function key( Player:entity, Key:string, Down:number ) {
        if( Me:keyPressed( "lshift" ) ) {
            if( Player == Me & Key == "mouse_left" & Down == 1 ) {
                local Bullet = bulletFire( holoEntity( 129 ):pos(), Target:pos( ), Arc, Power, "models/props_phx/misc/potato_launcher_explosive.mdl", 1 )
                Bullet:setTrails( 3, 3, 10, "trails/smoke", vec( 255, 0, 0 ), 255)
                Bullet:setAlpha( 0 )
                local I = randint( 2e8 )
                holoCreate( I, Bullet:pos( ), vec( 0.2 ), ang( 0 ) )
                holoModel( I, "hq_sphere" )
                holoColor( I, vec( 0 ) )
                holoParent( I, Bullet )
            }
            if( Player == Me & Key == "mouse_right" & Down == 1 ) {
                GoTo = Me:aimPos( )
            }
        }
    }
}

if( ModelLoaded ) {
    interval( 60 )
    if( clk( ) ) { main( ) }
    if( chatClk( ) ) { chat( lastSpoke( ), lastSaid( ) ) }
    if( keyClk( ) ) {
        local Player = keyClk()
        local Key = keyClkPressed()
        local Down = Player:keyPressed( Key ) ? 1 : 0
        key( Player, Key, Down )
    }
}
