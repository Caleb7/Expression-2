# ----------------------------------------------------------------------------------------------------------------------------- #
# ____                                      __          __  __          ___                                                     #
#/\  _ `.                                  /\ \        /\ \/\ \        /\_ \                                                    #
#\ \ \/\ \  _ __    __     __      ___ ___ \ \/ ____   \ \ \_\ \    ___\//\ \     ___      __   _ __    __      ___ ___         #
# \ \ \ \ \/\`'__\/'__`\ /'__`\  /' __` __`\\/ /',__\   \ \  _  \  / __`\\ \ \   / __`\  /'_ `\/\`'__\/'__`\  /' __` __`\       #
#  \ \ \_\ \ \ \//\  __//\ \ \.\_/\ \/\ \/\ \ /\__, `\   \ \ \ \ \/\ \ \ \\_\ \_/\ \ \ \/\ \ \ \ \ \//\ \ \.\_/\ \/\ \/\ \      #
#   \ \____/\ \_\\ \____\ \__/.\_\ \_\ \_\ \_\\/\____/    \ \_\ \_\ \____//\____\ \____/\ \____ \ \_\\ \__/.\_\ \_\ \_\ \_\     #
#    \/___/  \/_/ \/____/\/__/\/_/\/_/\/_/\/_/ \/___/      \/_/\/_/\/___/ \/____/\/___/  \/___ \ \/_/ \/__/\/_/\/_/\/_/\/_/     #
#                                                                                          /\____/                              #
#                                                                                          \_/__/                               #
# ----------------------------------------------------------------------------------------------------------------------------- #
# Modeler Version: v5
# Date: 11/17/2018 @ 2330
# Holograms: 
# Notes: 
# 2 -> yaw pivot +ang 180 90 0
# 4 -> pivot A
# 6 -> pivot B
# 8 -> pivot C
# 14 -> endpoint D
# --------------------------------------------- #
@name t
@persist LenA LenB LenC
@persist T:entity

#include "dream/lib/dream"

if( first( ) ) {

    Model = array("models/holograms/cube.mdl","models/mechanics/robotics/xfoot.mdl","models/holograms/cube.mdl","models/mechanics/robotics/d3.mdl","models/holograms/cube.mdl","models/mechanics/robotics/d3.mdl","models/holograms/cube.mdl","models/mechanics/robotics/d2.mdl","models/mechanics/robotics/b1.mdl","models/mechanics/robotics/a1.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_cylinder.mdl","models/mechanics/robotics/xfoot.mdl","models/mechanics/robotics/xfoot.mdl","models/holograms/cube.mdl","models/holograms/hq_cylinder.mdl","models/mechanics/robotics/a1.mdl")
    Position = array(vec(0,0,0),vec(0,0,14.6641),vec(0,0,24.0146),vec(0,0,89.8672),vec(0,0,155.2666),vec(0,0,220.4912),vec(0,0,285.1836),vec(0,0,315.1348),vec(0,0,353.1074),vec(0,0,379.6768),vec(0,0,24.0146),vec(0,0,155.2666),vec(0,0,285.1836),vec(0,0,344),vec(-6.375,0,419.7852),vec(6.375,0,419.7852),vec(0,0,412.9473),vec(0,0,412.9473),vec(0,0,400.4961))
    IsPositionLocal = array(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
    Angle = array(ang(0,0,0),ang(0,0,0),ang(0,-90,0),ang(90,-90,0),ang(0,-90,0),ang(90,90,0),ang(0,-90,0),ang(90,-90,0),ang(90,90,0),ang(90,-90,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(0,180,-180),ang(0,0,180),ang(0,0,0),ang(90,0,0),ang(90,90,0))
    Scale = array(vec(0.1,0.1,0.1),vec(1,1,1),vec(0.2,0.2,0.2),vec(1,1,1),vec(0.2,0.2,0.2),vec(1,1,1),vec(0.2,0.2,0.2),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(0.9,0.9,0.9),vec(0.9,0.9,0.9),vec(0.9,0.9,0.9),vec(0.9,0.9,0.9),vec(1,1,1),vec(1,1,1),vec(0.1,0.1,0.1),vec(0.9,0.9,1.5),vec(1,1,1))
    IsScaleUnits = array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
    Color = array(vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(50,50,50),vec(50,50,50),vec(50,50,50),vec(50,50,50),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(50,50,50),vec(255,255,255))
    Alpha = array(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255)
    Material = array("","","","","","","","","","","","","","","","","","","")
    Skin = array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
    Parent = array(1,1,2,3,3,5,5,7,7,7,3,5,7,7,17,17,7,7,7)
    Note = array("","","pivot A","","pivot B","","pivot C","","","","","","","","","","foot pivot","","")

    function setup( ) {
        LenA = 130
        LenB = 130
        LenC = 130
        T = findPlayerByName( "doll" )
        holoParent( 1, Chip )
    }

    function main( ) {
        
        # set position of foot to hitNormal():up() * distance for foot size
        ik3_basic( 3, 5, 7, LenA, LenB, LenC, Me:aimPos( ) + vec( 0, 0, 19 ) )
        
        # this is fine
        holoAng( 1, ( holoEntity( 4 ):angles( ) * ang( 0, 1, 0 ) ) + ang( 0, -90, 0 ) )
        
        # set this ang to -hitNormal():up():toAngle() or whatever
        holoAng( 17, ( holoEntity( 4 ):angles( ) * ang( 0, 1, 0 ) ) + ang( 180, -90, 0 ) )
    }
    
    function chat( Player:entity, Text:string ) {
        
    }
    
    function key( Player:entity, Key:string, Down:number ) {
        
    }
}

if( ModelLoaded ) {
    interval( 60 )
    if( clk( ) ) { main( ) }
    if( chatClk( ) ) { chat( lastSpoke( ), lastSaid( ) ) }
    if( keyClk( ) ) {
        local Player = keyClk()
        local Key = keyClkPressed()
        local Down = Player:keyPressed( Key ) ? 1 : 0
        key( Player, Key, Down )
    }
}



















