# ----------------------------------------------------------------------------------------------------------------------------- #
# ____                                      __          __  __          ___                                                     #
#/\  _ `.                                  /\ \        /\ \/\ \        /\_ \                                                    #
#\ \ \/\ \  _ __    __     __      ___ ___ \ \/ ____   \ \ \_\ \    ___\//\ \     ___      __   _ __    __      ___ ___         #
# \ \ \ \ \/\`'__\/'__`\ /'__`\  /' __` __`\\/ /',__\   \ \  _  \  / __`\\ \ \   / __`\  /'_ `\/\`'__\/'__`\  /' __` __`\       #
#  \ \ \_\ \ \ \//\  __//\ \ \.\_/\ \/\ \/\ \ /\__, `\   \ \ \ \ \/\ \ \ \\_\ \_/\ \ \ \/\ \ \ \ \ \//\ \ \.\_/\ \/\ \/\ \      #
#   \ \____/\ \_\\ \____\ \__/.\_\ \_\ \_\ \_\\/\____/    \ \_\ \_\ \____//\____\ \____/\ \____ \ \_\\ \__/.\_\ \_\ \_\ \_\     #
#    \/___/  \/_/ \/____/\/__/\/_/\/_/\/_/\/_/ \/___/      \/_/\/_/\/___/ \/____/\/___/  \/___ \ \/_/ \/__/\/_/\/_/\/_/\/_/     #
#                                                                                          /\____/                              #
#                                                                                          \_/__/                               #
# ----------------------------------------------------------------------------------------------------------------------------- #
# Modeler Version: v5.1
# Date: 1/11/2019 @ 2316
# Holograms: 
# Notes: 
# --------------------------------------------- #
@name copy_97862
@inputs 
@outputs 
@persist Hologram:table

##include "lib/dream"

if( first( ) ) {

    Hologram = table()
    Hologram[ "model", array ] = array("models/sprops/geometry/qhex_120.mdl","models/sprops/rectangles/size_2_5/rect_18x132x3.mdl","models/sprops/geometry/qhex_72.mdl","models/sprops/misc/domes/size_3/dome_36x60.mdl","models/sprops/geometry/qhex_72.mdl","models/sprops/cuboids/height24/size_4/cube_96x60x24.mdl","models/sprops/geometry/qhex_144.mdl","models/sprops/cuboids/height06/size_3/cube_18x24x6.mdl","models/sprops/misc/tubes/size_1/h_tube_12x144.mdl","models/sprops/geometry/qhex_120.mdl","models/sprops/misc/tubes/size_4/tube_48x120.mdl","models/sprops/cuboids/height36/size_2/cube_48x48x36.mdl","models/props_phx/carseat2.mdl","models/sprops/cuboids/height06/size_4/cube_24x36x6.mdl","models/sprops/rectangles/size_2_5/rect_18x132x3.mdl","models/sprops/geometry/qhex_120.mdl","models/sprops/rectangles/size_2/rect_12x108x3.mdl","models/sprops/rectangles/size_3/rect_24x132x3.mdl","models/sprops/cuboids/height24/size_4/cube_96x60x24.mdl","models/sprops/rectangles/size_3_5/rect_30x54x3.mdl","models/sprops/cuboids/height06/size_3/cube_18x60x6.mdl","models/sprops/cuboids/height06/size_4/cube_24x36x6.mdl","models/sprops/cuboids/height06/size_3/cube_18x36x6.mdl","models/hunter/blocks/cube4x8x05.mdl","models/sprops/cuboids/height06/size_4/cube_24x36x6.mdl","models/sprops/geometry/qhex_72.mdl","models/sprops/rectangles/size_2/rect_12x108x3.mdl","models/sprops/misc/tubes/size_1/h_tube_12x144.mdl","models/sprops/rectangles/size_3/rect_24x132x3.mdl","models/sprops/rectangles/size_3_5/rect_30x54x3.mdl","models/sprops/misc/tubes/size_3/h_tube_36x42.mdl","models/sprops/rectangles/size_3_5/rect_30x54x3.mdl","models/sprops/geometry/qhex_72.mdl","models/sprops/rectangles/size_2_5/rect_18x132x3.mdl","models/sprops/geometry/qhex_72.mdl","models/sprops/rectangles/size_2_5/rect_18x132x3.mdl","models/sprops/geometry/qhex_144.mdl","models/sprops/cuboids/height06/size_4/cube_24x36x6.mdl","models/sprops/cuboids/height06/size_3/cube_18x24x6.mdl","models/sprops/cuboids/height06/size_3/cube_18x24x6.mdl","models/sprops/geometry/qhex_120.mdl","models/sprops/cuboids/height06/size_3/cube_18x60x6.mdl","models/sprops/rectangles/size_3_5/rect_30x54x3.mdl","models/sprops/misc/tubes/size_2/h_tube_24x60.mdl","models/sprops/misc/domes/size_3/dome_36x60.mdl","models/sprops/geometry/qhex_72.mdl","models/sprops/cuboids/height24/size_4/cube_96x60x24.mdl","models/sprops/geometry/qhex_72.mdl","models/sprops/geometry/qhex_144.mdl","models/sprops/cuboids/height36/size_2/cube_48x48x36.mdl","models/sprops/misc/tubes/size_4/tube_48x120.mdl","models/sprops/rectangles/size_3_5/rect_30x54x3.mdl","models/props_phx/carseat2.mdl","models/sprops/geometry/qhex_120.mdl","models/sprops/cuboids/height06/size_4/cube_24x36x6.mdl","models/sprops/cuboids/height24/size_4/cube_96x60x24.mdl","models/sprops/rectangles/size_3_5/rect_30x54x3.mdl","models/sprops/cuboids/height06/size_3/cube_18x60x6.mdl","models/sprops/cuboids/height06/size_4/cube_24x36x6.mdl","models/sprops/cuboids/height06/size_3/cube_18x36x6.mdl","models/sprops/geometry/qhex_120.mdl","models/sprops/geometry/qhex_72.mdl","models/sprops/rectangles/size_3_5/rect_30x54x3.mdl","models/sprops/cuboids/height06/size_4/cube_24x36x6.mdl","models/sprops/geometry/qhex_72.mdl","models/sprops/rectangles/size_2/rect_12x108x3.mdl","models/sprops/rectangles/size_2/rect_12x108x3.mdl","models/sprops/misc/tubes/size_3/h_tube_36x42.mdl","models/sprops/rectangles/size_3_5/rect_30x54x3.mdl","models/hunter/triangles/2x2mirrored.mdl","models/sprops/geometry/qhex_72.mdl","models/hunter/triangles/2x2mirrored.mdl","models/sprops/cuboids/height06/size_4/cube_24x36x6.mdl","models/sprops/geometry/qhex_144.mdl","models/sprops/triangles/right/size_4/rtri_48x48.mdl","models/sprops/geometry/qhex_72.mdl","models/sprops/geometry/qhex_72.mdl","models/sprops/misc/domes/size_4/dome_48x84.mdl","models/sprops/misc/tubes/size_4/h_tube_48x72.mdl","models/sprops/misc/tubes/size_2/h_tube_24x60.mdl","models/sprops/geometry/qhex_120.mdl","models/sprops/cuboids/height06/size_3/cube_18x24x6.mdl","models/sprops/cuboids/height06/size_3/cube_18x36x6.mdl","models/sprops/misc/domes/size_3/dome_36x60.mdl","models/sprops/rectangles/size_3_5/rect_30x54x3.mdl","models/sprops/cuboids/height06/size_3/cube_18x24x6.mdl","models/sprops/triangles/right/size_4/rtri_48x48.mdl","models/sprops/rectangles/size_3_5/rect_30x54x3.mdl","models/sprops/geometry/qhex_72.mdl","models/sprops/misc/domes/size_4/dome_48x144.mdl","models/hunter/blocks/cube4x8x05.mdl","models/sprops/rectangles/size_3_5/rect_30x54x3.mdl","models/sprops/rectangles/size_3_5/rect_30x54x3.mdl","models/sprops/rectangles/size_2_5/rect_18x132x3.mdl","models/sprops/misc/tubes/size_2/h_tube_24x60.mdl","models/sprops/rectangles/size_3_5/rect_30x54x3.mdl","models/sprops/cuboids/height06/size_3/cube_18x60x6.mdl","models/sprops/cuboids/height06/size_3/cube_18x24x6.mdl","models/sprops/geometry/qhex_96.mdl","models/sprops/misc/tubes/size_1/h_tube_12x144.mdl","models/sprops/rectangles/size_3_5/rect_30x54x3.mdl","models/sprops/rectangles/size_3/rect_24x132x3.mdl","models/sprops/rectangles/size_3/rect_24x132x3.mdl","models/sprops/rectangles/size_3/rect_24x132x3.mdl","models/sprops/misc/domes/size_4/dome_48x144.mdl","models/sprops/geometry/qhex_72.mdl","models/sprops/rectangles/size_3/rect_24x132x3.mdl","models/sprops/misc/domes/size_3/dome_36x60.mdl","models/sprops/rectangles/size_3_5/rect_30x54x3.mdl","models/sprops/geometry/qhex_72.mdl","models/sprops/misc/tubes/size_4/h_tube_48x72.mdl","models/sprops/cuboids/height06/size_3/cube_18x24x6.mdl","models/sprops/rectangles/size_3_5/rect_30x54x3.mdl","models/sprops/cuboids/height06/size_3/cube_18x36x6.mdl","models/sprops/geometry/qhex_72.mdl","models/sprops/misc/tubes/size_1/h_tube_12x144.mdl","models/sprops/rectangles/size_2_5/rect_18x132x3.mdl","models/sprops/rectangles/size_2_5/rect_18x132x3.mdl","models/sprops/rectangles/size_3/rect_24x132x3.mdl","models/sprops/misc/domes/size_4/dome_48x84.mdl","models/sprops/geometry/qhex_96.mdl","models/sprops/cuboids/height06/size_3/cube_18x24x6.mdl","models/sprops/misc/tubes/size_2/h_tube_24x60.mdl","models/sprops/geometry/qhex_120.mdl","models/sprops/rectangles/size_2_5/rect_18x132x3.mdl","models/sprops/rectangles/size_3/rect_24x132x3.mdl")
    Hologram[ "position", array ] = array(vec(114.0874,269.6145,30.4019),vec(188.3599,176.0745,14.1353),vec(168.4756,169.8298,9.4233),vec(56.5029,307.408,40.8657),vec(138.6289,188.2224,47.9985),vec(13.936,187.1973,19.9487),vec(109.3657,133.9375,49.1938),vec(180.7549,163.2754,18.4717),vec(300.0972,234.8599,20.1777),vec(8.0708,258.2356,30.6162),vec(66.7603,203.2505,20.915),vec(59.9033,264.1313,19.022),vec(55.2085,336.5813,25.5356),vec(-27.0752,159.5188,18.3267),vec(-174.187,186.3923,19.6055),vec(114.2485,267.6584,10.4014),vec(125.4722,208.4277,33.8403),vec(316.001,207.5488,24.1279),vec(120.5732,195.9951,19.9473),vec(7.8389,134.9595,23.4146),vec(-4.7051,256.5405,21.1836),vec(128.1758,191.8625,48.2417),vec(22.7412,283.3218,20.6138),vec(56.5532,255.4163,12.0493),vec(11.5576,182.2283,48.2446),vec(22.0107,178.5872,48.001),vec(10.6689,193.9136,33.9946),vec(178.1533,184.6875,18.7998),vec(-53.7612,128.4966,11.9326),vec(135.0249,147.7878,21.061),vec(54.6694,326.7939,49.8184),vec(34.6338,136.9844,23.4092),vec(118.8525,185.8757,50.478),vec(-174.0854,186.1047,10.6328),vec(-25.7373,154.8088,28.4814),vec(188.1963,175.874,23.1084),vec(29.4717,131.9775,51.6963),vec(165.8179,175.7502,18.2363),vec(-322.8574,114.375,17.5674),vec(-543.4346,96.5386,17.2085),vec(-389.1982,220.9182,29.498),vec(-377.2969,218.4553,19.1113),vec(-381.7954,97.9727,33.752),vec(-462.8975,270.0044,32.4966),vec(-446.666,258.8879,39.9639),vec(-335.1177,120.9668,8.5195),vec(-489.6021,138.8071,19.0542),vec(-364.9048,139.4517,47.0957),vec(-394.3335,85.2568,48.2954),vec(-443.3999,215.6001,18.1216),vec(-436.729,154.6985,20.0166),vec(-482.2139,87.4756,36.1108),vec(-447.8726,288.0642,24.6333),vec(-389.0454,218.9612,9.4976),vec(-530.6973,111.2539,17.4355),vec(-382.9395,147.2791,19.0459),vec(-495.8589,86.5874,22.5225),vec(-508.0308,208.2065,20.2876),vec(-375.3467,143.1235,47.3398),vec(-480.5029,234.9038,19.7158),vec(-495.249,209.863,29.7197),vec(-384.688,137.1655,49.5771),vec(-469.0576,88.5308,22.5146),vec(-491.9941,133.8467,47.3506),vec(-481.5513,130.1729,47.1064),vec(-492.8481,145.5332,33.1001),vec(-378.001,159.6968,32.938),vec(-448.4399,278.2793,48.9165),vec(-368.6348,99.0273,20.1602),vec(-337.373,120.3594,15.3506),vec(-529.3735,106.54,27.5898),vec(-534.7153,117.5317,14.2266),vec(-337.7559,126.8955,17.333),vec(-474.2334,83.541,50.8027),vec(-300.021,135.5425,18.8501),vec(-501.3359,127.8872,49.5859),vec(-533.1357,106.1963,7.5811),vec(-431.7954,94.4805,19.8574),vec(-447.2954,267.405,11.5112),vec(-432.3481,271.9788,32.4531),vec(-495.4062,211.8142,9.7192),vec(-374.1626,126.251,56.9727),vec(-408.6943,240.4731,19.6802),vec(-449.7144,299.0115,39.8042),vec(-382.0601,98.1016,3.6592),vec(-490.8105,116.9731,56.9824),vec(-564.96,125.5454,17.7202),vec(-395.4341,97.085,20.1577),vec(-335.751,120.8911,28.0879),vec(-449.791,299.6277,23.644),vec(-437.8862,178.9924,11.9888),vec(-482.4902,87.6035,6.0181),vec(121.603,146.8213,4.5591),vec(310.3037,226.2483,15.5132),vec(40.2383,318.4753,33.3975),vec(121.8657,146.6924,34.6519),vec(125.9976,267.1882,20.0166),vec(-39.7666,144.7642,18.0977),vec(30.5571,289.0957,53.2417),vec(-164.8809,195.8738,14.7456),vec(21.2056,136.0161,6.9106),vec(-178.1689,167.1416,11.248),vec(196.731,157.6743,17.2246),vec(195.8047,157.3267,22.7686),vec(53.2544,348.1394,24.5469),vec(167.8408,169.7512,28.9917),vec(-54.6665,128.8179,17.4814),vec(53.3325,347.522,40.7075),vec(21.48,135.8882,37.0034),vec(2.2344,176.2402,50.4795),vec(55.8496,315.9248,12.4131),vec(12.7925,165.3579,57.8765),vec(108.2305,145.7642,21.0566),vec(94.5322,289.1104,20.5835),vec(-29.4966,154.4536,8.4727),vec(-38.7368,157.4434,15.4292),vec(-47.9404,147.6733,11.3174),vec(-48.0415,147.9619,20.2891),vec(-179.0728,167.4634,16.7969),vec(71.8779,143.0474,20.7534),vec(84.1123,294.6077,52.4258),vec(129.4106,174.9932,57.874),vec(70.7808,320.5432,33.3569),vec(7.9102,260.1863,10.6167),vec(310.1406,226.0476,24.4858),vec(316.9263,207.8972,18.5835))
    Hologram[ "angle", array ] = array(ang(0.0012,4.7163,-90.0088),ang(-0.5981,22.4447,179.9431),ang(0.0089,94.7163,90.0012),ang(0.0012,4.7163,89.9911),ang(0.1147,94.7002,-0.1449),ang(0.0012,4.7163,-0.0089),ang(0.0089,94.7162,45.0012),ang(-89.9724,-175.2837,0),ang(-87.789,-83.3969,15.8594),ang(-0.0012,-175.2837,90.009),ang(0.0012,4.7166,-0.0089),ang(0.0012,4.7163,-0.0089),ang(0.0012,4.7163,-0.0089),ang(0.3829,-146.0714,90.583),ang(0.2982,162.976,0.73),ang(0.0012,4.7163,-90.0088),ang(0.0153,95.1778,0.1892),ang(-0.6185,22.5064,177.8264),ang(0.0012,4.7163,-0.0089),ang(-0.0089,-85.2838,-90.011),ang(0.3246,-113.698,90.2949),ang(-45.0365,-85.2904,0.028),ang(-0.0012,-175.2837,90.0089),ang(0.0012,4.7163,-0.0089),ang(-45.0365,-85.2904,0.028),ang(0.1147,94.7002,-0.1449),ang(0.1379,-84.67,-0.086),ang(-87.789,-83.3969,15.8594),ang(0.3195,162.9146,-1.3863),ang(-0.0089,-85.2838,90.0085),ang(-0.0012,-175.2837,0.0089),ang(-0.009,-85.2837,89.989),ang(-8.619,93.9731,2.5812),ang(0.2948,163.2467,0.732),ang(0.1097,94.8218,-90.1334),ang(-0.5983,22.1739,179.9465),ang(0.0089,94.7163,-44.9988),ang(-0.3966,-24.496,-89.4337),ang(-89.965,-175.4589,0),ang(89.9642,-175.459,0),ang(0.0049,4.5411,-90.0106),ang(-0.3277,-57.0447,-89.7151),ang(0.0105,94.5412,-0.0049),ang(44.9951,-175.4482,0.0152),ang(0.0049,4.5411,89.9893),ang(0.0107,94.5411,90.005),ang(0.0049,4.5411,-0.0107),ang(0.1165,94.525,-0.1411),ang(0.0107,94.541,45.0049),ang(0.0049,4.5411,-0.0107),ang(0.0049,4.5414,-0.0107),ang(0.0107,94.5411,0.0156),ang(0.0049,4.5411,-0.0107),ang(0.0049,4.5411,-90.0106),ang(0.3787,-146.2466,90.5827),ang(0.0049,4.5411,-0.0107),ang(-0.0107,-85.459,-90.0147),ang(0.3212,-113.8732,90.2924),ang(-45.0383,-85.4618,0.0228),ang(-0.0049,-175.459,90.0107),ang(-0.0049,-175.459,90.0108),ang(-8.6171,93.7973,2.5849),ang(-0.0108,-85.4589,89.9853),ang(-45.0383,-85.4618,0.0228),ang(0.1165,94.525,-0.1411),ang(0.1362,-84.8452,-0.0898),ang(0.0171,95.0026,0.1929),ang(-0.0049,-175.459,0.0107),ang(-0.0107,-85.459,90.0047),ang(-0.28,44.0663,-179.9094),ang(0.1115,94.6467,-90.1297),ang(-0.1939,135.6203,-0.3301),ang(-0.3942,-24.6711,-89.437),ang(0.0107,94.5411,-44.995),ang(-0.1062,-2.3488,-89.7322),ang(-8.6171,93.7973,2.5849),ang(0.1115,94.6467,-90.1297),ang(-0.1913,-175.5392,-89.9192),ang(-0.0049,-175.459,-179.9893),ang(45.0049,4.5303,-0.0152),ang(-0.0049,-175.459,90.0108),ang(-0.6816,-175.5927,-15.7884),ang(0.0085,4.5411,-89.9986),ang(-0.0049,-175.459,90.0107),ang(-0.0132,-85.6372,0.0001),ang(-0.6816,-175.5927,-15.7884),ang(0.0922,179.9491,89.6191),ang(-0.0105,-85.4588,-89.9953),ang(0.0107,94.5411,90.005),ang(0.0049,4.5411,-90.0107),ang(0.0014,-0.8688,-0.0173),ang(-0.0133,-85.6372,-0.02),ang(-0.0113,-85.462,0.0038),ang(-0.5981,22.4447,179.9431),ang(44.9988,-175.2748,0.0126),ang(0.0087,94.7164,-0.0086),ang(-0.3279,-56.8695,-89.711),ang(89.975,-175.2838,0),ang(0.0089,94.3643,-44.9988),ang(87.0703,-101.0731,-174.0347),ang(-0.0115,-85.462,-0.0163),ang(0.3195,162.9146,-1.3863),ang(-0.5431,21.9756,169.7672),ang(-0.6185,22.5064,177.8264),ang(0.0012,4.7163,-90.0089),ang(0.0089,94.7163,90.0012),ang(0.2369,163.4442,-9.4484),ang(-0.0012,-175.2837,90.0089),ang(0.0089,94.7163,0.0119),ang(-8.619,93.9731,2.5812),ang(-0.0012,-175.2837,-179.9911),ang(-0.6778,-175.4174,-15.7903),ang(-0.0087,-85.2836,-89.9916),ang(0.0048,4.7163,-89.9968),ang(0.1097,94.8218,-90.1334),ang(87.0703,-101.0731,-174.0347),ang(0.2948,163.2467,0.732),ang(0.2982,162.976,0.73),ang(0.2369,163.4442,-9.4484),ang(-0.1876,-175.364,-89.921),ang(0.0089,94.7163,45.0012),ang(-0.6778,-175.4174,-15.7903),ang(45.0012,4.7073,-0.0126),ang(-0.0012,-175.2837,90.009),ang(-0.5983,22.1739,179.9465),ang(-0.5431,21.9756,169.7672))
    Hologram[ "scale", array ] = array(vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1))
    Hologram[ "color", array ] = array(vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255))
    Hologram[ "alpha", array ] = array
    Hologram[ "material", array ] = array("models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","WTP/metal_3","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","WTP/metal_3","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite","models/debug/debugwhite")
    Hologram[ "skin", array ] = array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
    Hologram[ "parent", array ] = array(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
    Hologram[ "note", array ] = array("","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","")

    function buffer( ) {
        local Next = Hologram[ "next", number ]
        for( I = Next, Next + clamp( holoRemainingSpawns( ), 0, Hologram[ "model", array ]:count( ) - Next + 1 ) ) {
            holoCreate(
                I,
                entity():toWorld(Hologram["position", array][I, vector]),
                Hologram["scale", array][I, vector],
                entity():toWorld(Hologram["angle", array][I, angle]),
                vec4(Hologram["color", array][I, vector],
                Hologram["alpha", array ][I,number]),
                Hologram["model", array][I, string]
            )
            holoMaterial(I, Hologram["material", array][I, string])
            Hologram[ "next", number ] = I
        }
        if( Next <= Hologram[ "model", array ]:count( ) ) { timer( "buffer", 0.1 )
        } else {
            for( I = 1, Hologram[ "model", array ]:count( ) ) {holoParent(I, Hologram["parent", array][I, number]) }
            interval( 100 ) }
    } buffer( )
}

if( clk( "buffer" ) ) { buffer( ) } elseif( clk( ) ) {
    interval( 60 )

}





