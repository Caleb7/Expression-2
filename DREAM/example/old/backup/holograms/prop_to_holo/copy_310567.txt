# ----------------------------------------------------------------------------------------------------------------------------- #
# ____                                      __          __  __          ___                                                     #
#/\  _ `.                                  /\ \        /\ \/\ \        /\_ \                                                    #
#\ \ \/\ \  _ __    __     __      ___ ___ \ \/ ____   \ \ \_\ \    ___\//\ \     ___      __   _ __    __      ___ ___         #
# \ \ \ \ \/\`'__\/'__`\ /'__`\  /' __` __`\\/ /',__\   \ \  _  \  / __`\\ \ \   / __`\  /'_ `\/\`'__\/'__`\  /' __` __`\       #
#  \ \ \_\ \ \ \//\  __//\ \ \.\_/\ \/\ \/\ \ /\__, `\   \ \ \ \ \/\ \ \ \\_\ \_/\ \ \ \/\ \ \ \ \ \//\ \ \.\_/\ \/\ \/\ \      #
#   \ \____/\ \_\\ \____\ \__/.\_\ \_\ \_\ \_\\/\____/    \ \_\ \_\ \____//\____\ \____/\ \____ \ \_\\ \__/.\_\ \_\ \_\ \_\     #
#    \/___/  \/_/ \/____/\/__/\/_/\/_/\/_/\/_/ \/___/      \/_/\/_/\/___/ \/____/\/___/  \/___ \ \/_/ \/__/\/_/\/_/\/_/\/_/     #
#                                                                                          /\____/                              #
#                                                                                          \_/__/                               #
# ----------------------------------------------------------------------------------------------------------------------------- #
# Modeler Version: v5.1
# Date: 1/11/2019 @ 2318
# Holograms: 
# Notes: 
# --------------------------------------------- #
@name copy_310567
@inputs 
@outputs 
@persist Hologram:table

##include "lib/dream"

if( first( ) ) {

    Hologram = table()
    Hologram[ "model", array ] = array("models/hunter/plates/plate05.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate025x1.mdl","models/hunter/plates/plate1.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate1.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/triangles/025x025.mdl","models/hunter/plates/plate075.mdl","models/hunter/plates/plate025x075.mdl","models/hunter/plates/plate05x05.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate075.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate125.mdl","models/hunter/plates/plate025x05.mdl","models/squad/sf_bars/sf_bar1.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate025x1.mdl","models/hunter/plates/plate025x1.mdl","models/hunter/plates/plate025.mdl","models/sprops/trans/exhaust/tip_3.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate025x150.mdl","models/hunter/plates/plate025x05.mdl","models/hunter/plates/plate025x1.mdl","models/hunter/plates/plate075.mdl","models/sprops/trans/exhaust/tip_3.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate025.mdl","models/nova/jalopy_seat.mdl","models/hunter/plates/plate025x1.mdl","models/sprops/trans/wheel_a/t_wheel20.mdl","models/sprops/trans/wheel_a/t_wheel20.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate025x075.mdl","models/hunter/plates/plate025x075.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate125.mdl","models/hunter/plates/plate025x025.mdl","models/squad/sf_tris/sf_tri1x1.mdl","models/hunter/plates/plate125.mdl","models/hunter/triangles/025x025.mdl","models/hunter/plates/plate125.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate1.mdl","models/squad/sf_tris/sf_tri1x1.mdl","models/hunter/plates/plate.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate025x150.mdl","models/hunter/plates/plate025x075.mdl","models/hunter/plates/plate.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate1.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate1.mdl","models/props_pipes/valvewheel002.mdl","models/hunter/plates/plate.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate.mdl","models/hunter/plates/plate025x1.mdl","models/hunter/plates/plate025.mdl","models/squad/sf_bars/sf_bar1.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate.mdl","models/phxtended/bar1x.mdl","models/hunter/plates/plate025.mdl","models/sprops/trans/wheel_a/t_wheel20.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate1x1.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate025x05.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate025.mdl","models/sprops/trans/wheel_a/t_wheel20.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate05x05.mdl","models/hunter/plates/plate025x05.mdl","models/hunter/plates/plate150.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate150.mdl","models/hunter/plates/plate025x05.mdl","models/props_c17/furnitureshelf001b.mdl","models/hunter/plates/plate025x1.mdl","models/hunter/plates/plate025.mdl","models/sprops/trans/exhaust/tip_3.mdl","models/hunter/plates/plate05.mdl","models/hunter/plates/plate075.mdl","models/hunter/plates/plate.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate025x05.mdl","models/hunter/plates/plate025x05.mdl","models/sprops/trans/exhaust/tip_3.mdl","models/hunter/plates/plate.mdl","models/hunter/plates/plate025x05.mdl","models/hunter/plates/plate.mdl","models/hunter/plates/plate025x1.mdl","models/hunter/plates/plate.mdl","models/hunter/plates/plate.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate025.mdl","models/phxtended/bar1x.mdl","models/hunter/plates/plate025x025.mdl","models/sprops/trans/exhaust/tip_3.mdl","models/squad/sf_bars/sf_bar1.mdl","models/hunter/plates/plate025.mdl","models/squad/sf_bars/sf_bar1.mdl","models/sprops/trans/exhaust/tip_3.mdl","models/squad/sf_bars/sf_bar1.mdl","models/hunter/plates/plate025x05.mdl")
    Hologram[ "position", array ] = array(vec(-7.358,4.1751,10.2456),vec(-19.2332,-5.7845,-0.7979),vec(-20.7755,-12.4936,-7.4287),vec(-7.6242,4.5071,7.2017),vec(-52.1897,-1.4652,-6.5234),vec(-12.3617,7.6487,10.4585),vec(-22.4438,-14.3514,-3.9619),vec(-76.1551,56.2296,15.8794),vec(-84.257,39.947,21.1777),vec(-80.2081,60.8876,1.187),vec(-6.7429,22.4821,-1.1533),vec(-6.0323,30.3689,5.7505),vec(-97.4795,24.337,-1.168),vec(-95.1787,17.5586,0.3267),vec(-74.3102,58.6703,14.3745),vec(-12.2442,-19.513,-6.8057),vec(-67.5412,45.3845,-3.8789),vec(-79.3683,22.2973,-1.4463),vec(-85.378,40.7811,8.2441),vec(-87.25,27.4524,6.3506),vec(-17.0574,-7.7838,10.8169),vec(-57.6622,29.0303,-7.0771),vec(-5.5644,19.8643,0.9648),vec(-64.4795,3.1419,-7.1318),vec(-14.0125,8.2791,-2.9375),vec(-85.0032,56.9333,-0.4316),vec(-80.3366,60.8871,-1.0576),vec(-62.6943,52.6703,-6.2617),vec(-31.542,42.5625,-6.4336),vec(-2.6921,27.7627,-3.8984),vec(-65.4706,57.65,0.8384),vec(-4.3596,19.274,10.8472),vec(-62.5254,4.8733,7.0728),vec(-12.9405,33.2078,-9.7344),vec(-14.1041,8.3063,5.7158),vec(-89.1195,43.05,-1.1719),vec(-60.9883,55.5392,0.165),vec(-7.3719,30.3387,-1.8818),vec(-98.4327,24.9314,2.9072),vec(-33.0868,16.5318,20.7178),vec(-79.8854,16.0383,-6.3379),vec(-65.6879,51.9998,15.4146),vec(-81.3089,18.6694,15.3105),vec(-2.983,25.4511,-7.375),vec(-18.9717,-11.8458,5.6973),vec(-35.3611,38.2542,-9.96),vec(-67.1937,48.2603,-1.3691),vec(-94.9852,21.2365,15.5977),vec(-42.9391,49.0731,-7.0283),vec(-5.3133,19.9425,4.1748),vec(-2.8932,27.8148,-17.8955),vec(-40.8795,47.6394,11.1934),vec(7.89,23.3959,-6.8086),vec(-62.1024,2.4161,11.0991),vec(-70.4433,61.4722,7.1187),vec(-77.3195,15.7744,-6.1279),vec(-23.0067,-15.0468,-17.877),vec(-21.7401,-14.8024,-6.2129),vec(-1.6588,29.3647,-7.3428),vec(-43.0334,46.4083,7.1592),vec(-51.3337,4.256,-10.0312),vec(-77.4247,60.241,17.6318),vec(-92.0343,30.2016,3.6533),vec(-60.8585,50.8799,-6.0186),vec(-91.6313,16.335,7.0483),vec(-27.3695,-12.2483,-1.9922),vec(-89.699,42.6344,10.6382),vec(-62.9081,30.5581,-6.9932),vec(-97.6107,24.5636,1.5615),vec(-76.206,51.0035,6.4712),vec(-1.8918,27.5209,-6.1279),vec(-17.9986,9.9301,-6.2744),vec(-81.4051,61.2304,3.0347),vec(-97.3793,31.122,-0.3906),vec(-18.1412,-7.3767,4.0962),vec(-99.4787,19.2585,5.8506),vec(3.4671,23.6501,6.5029),vec(-80.582,61.068,1.6128),vec(-16.7634,29.1026,10.4688),vec(-81.3631,52.9391,3.7134),vec(-40.9135,20.6697,3.499),vec(-97.419,24.2448,1.1748),vec(-2.4564,23.3576,5.7651),vec(-88.4799,41.9505,3.1064),vec(-91.2549,24.0388,15.8701),vec(-20.39,-6.8031,-1.4092),vec(-94.4574,20.0058,14.7832),vec(-75.0905,61.2715,14.8916),vec(-32.3932,-4.2458,10.4688),vec(-76.375,60.8882,15.73),vec(-77.933,37.4174,-4.4424),vec(-33.1252,-9.7659,-9.8408),vec(-40.8682,47.4735,14.041),vec(-18.2763,-7.1905,0.8608),vec(-61.9744,2.5019,13.9233),vec(-63.0545,30.0402,-6.252),vec(-61.2193,29.5871,13.4136),vec(-23.9545,12.7548,-8.9199),vec(-22.9335,-16.0122,-7.3896),vec(-85.492,14.9648,0.7212),vec(-8.5605,4.7623,0.3628),vec(-77.3771,24.414,-3.9248),vec(-95.1721,22.4516,17.4624),vec(-73.6486,63.441,0.4224),vec(-32.4288,-7.6681,-5.5732),vec(-14.1324,31.3266,-5.4844),vec(-56.4995,53.4248,-0.5186),vec(-77.7045,65.6424,5.8823),vec(-14.1397,8.2791,-5.1162),vec(0.3626,26.4014,-3.1201),vec(-16.0954,8.4492,0.1382),vec(-19.4491,-15.8228,-3.2158),vec(-80.5763,60.8293,1.5674),vec(-6.7538,21.1982,-0.7686),vec(-91.9584,21.0663,14.2871),vec(-97.7707,24.4039,1.4404),vec(-12.8088,-11.398,6.5),vec(-26.5349,-13.3261,5.6782),vec(-81.0017,12.8692,0.0532),vec(-84.1022,46.7571,16.3687),vec(-89.3436,42.7734,-0.4355),vec(-102.1302,20.6569,-0.5518),vec(-76.5115,10.7736,-0.6143),vec(-69.7609,61.7306,-2.1367),vec(-8.3409,4.6994,3.6152))
    Hologram[ "angle", array ] = array(ang(7.6989,-25.0668,-179.8809),ang(-82.3,-25.9564,135.9011),ang(-5.5745,110.2553,-84.68),ang(7.699,-25.1367,-179.8902),ang(-82.3001,-25.9595,91.0583),ang(7.6994,-25.278,-179.9091),ang(0.1107,-115.1373,172.3009),ang(-82.3001,-25.9561,0.9041),ang(-52.6995,154.6429,179.8865),ang(-82.3001,-25.9561,1.3349),ang(7.6993,-25.1212,-179.8882),ang(-82.3001,-25.956,-92.4589),ang(-52.699,155.0117,179.8167),ang(-82.3001,-25.9614,90.2849),ang(-7.6989,154.9419,179.8797),ang(-7.699,154.8796,89.888),ang(-0.0995,64.778,-172.3008),ang(-82.3001,-25.9634,90.7971),ang(-82.3005,-25.9561,0.8895),ang(-52.6956,155.0069,-90.1833),ang(5.5139,-70.3948,174.6172),ang(7.5196,-25.3716,-179.8627),ang(5.3566,20.1362,-174.4606),ang(0.1214,-115.0583,172.301),ang(7.7388,-25.0547,-179.8818),ang(7.7391,-25.1132,90.1103),ang(-52.739,154.9983,179.8228),ang(0.1064,-115.1497,172.2608),ang(-82.2601,-25.9324,-89.4286),ang(-0.1077,64.8604,-172.2608),ang(19.7053,67.5716,-81.7718),ang(5.3869,20.1352,-174.4342),ang(-82.2601,-25.9329,90.8035),ang(-82.2601,-25.9324,-89.2381),ang(-82.2598,-25.9324,-179.2052),ang(37.2608,154.7775,179.8648),ang(19.7053,67.5716,-81.7718),ang(-82.2601,-25.9329,90.7891),ang(37.2608,154.774,179.8655),ang(0,-115.0313,-140.5311),ang(-0.109,64.8694,-172.2609),ang(16.6055,154.8156,-0.1256),ang(16.4875,154.813,-0.1324),ang(-5.4496,-160.5145,84.4956),ang(0.1099,-115.1237,172.2609),ang(0.0917,-115.2574,172.2606),ang(-82.2601,-25.93,-89.166),ang(-44.5951,57.2337,-169.0993),ang(-0.097,64.7814,-172.2607),ang(-82.2601,-25.9325,-134.1744),ang(-82.2601,-25.9324,-89.1943),ang(-0.1147,64.9118,-172.2609),ang(-7.7391,154.8741,89.8914),ang(0.1006,-115.1922,172.2607),ang(-37.1722,-25.2846,-89.9625),ang(44.3714,72.5321,-169.1414),ang(-82.2601,-25.9324,-89.2055),ang(-37.2608,-25.2192,-179.8642),ang(7.7389,-25.0534,90.1184),ang(-82.2601,-25.9324,-89.2041),ang(-0.1521,64.9755,-172.2238),ang(-7.7764,154.8769,-90.1373),ang(0.1361,-115.1416,82.2235),ang(44.608,-122.8824,169.0437),ang(-37.1351,-25.182,90.2683),ang(-82.2223,-26.1381,-88.9834),ang(37.2234,154.7502,179.83),ang(40.6718,101.8192,143.2213),ang(-5.5759,109.4857,-174.5691),ang(-52.7729,155.039,89.7756),ang(-37.2234,-25.2479,-179.8296),ang(-7.5778,-24.8553,-179.4595),ang(37.2234,154.7589,179.8283),ang(7.7761,-25.0066,90.1531),ang(-82.2223,-26.1385,135.98),ang(-7.7765,154.8376,179.868),ang(0.1364,-115.1392,172.2235),ang(-7.7754,154.9882,179.8476),ang(16.6264,154.8291,-0.1443),ang(-0.1361,64.8583,-82.2235),ang(-7.7763,154.9082,179.8584),ang(-82.2224,-26.1382,0.498),ang(-0.1339,64.8419,-172.2235),ang(-82.2224,-26.1382,1.0072),ang(-82.2224,-26.1382,0.9286),ang(7.8263,-25.2211,-179.8627),ang(-5.5814,109.5443,-84.5748),ang(-5.3879,-159.8092,84.3825),ang(16.5569,154.8487,-0.1145),ang(-44.3485,-107.5109,169.0928),ang(-7.7764,154.9086,179.8584),ang(-82.2223,-26.1386,91.0438),ang(44.3405,72.5473,-169.0945),ang(5.5864,-70.4032,174.5799),ang(44.6102,-122.8664,169.0433),ang(-7.7841,154.713,179.8848),ang(-0.1184,64.8729,-172.3229),ang(-37.3228,-25.2328,-179.8541),ang(7.6771,-25.1924,-89.8914),ang(19.9328,-117.8294,81.8265),ang(7.6769,-25.0653,-179.8745),ang(0.1284,-115.0509,172.3231),ang(-7.677,154.8797,89.8818),ang(-82.3221,-26.0027,-88.5782),ang(-82.322,-26.0051,-88.9685),ang(-82.322,-26.0056,90.7228),ang(19.6988,67.5533,-81.8382),ang(-7.6769,154.919,179.8765),ang(7.6765,-24.9123,-179.854),ang(52.6769,-24.984,-179.8071),ang(7.6769,-25.1242,-179.8823),ang(52.6769,-24.9807,-179.8065),ang(-5.3258,-159.7532,174.4615),ang(-82.322,-26.0052,-134.1151),ang(-7.6771,154.8161,179.8903),ang(-7.6765,154.7684,179.8966),ang(0.1172,-115.1358,172.3229),ang(-82.322,-26.013,94.1704),ang(19.9328,-117.8294,81.8265),ang(0.1182,-115.1283,82.3229),ang(37.3228,154.7709,179.8534),ang(7.6772,-25.2538,90.1004),ang(19.9328,-117.8294,81.8265),ang(-7.677,154.8797,89.8818),ang(-82.3218,-26.0051,-179.123))
    Hologram[ "scale", array ] = array(vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1))
    Hologram[ "color", array ] = array(vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,0,0),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(36,36,36),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(255,0,0),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(145,145,145),vec(0,0,0),vec(0,0,0),vec(72,72,72),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(225,255,0),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(72,72,72),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(75,110,130),vec(255,255,255),vec(112,127,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(58,58,58),vec(0,0,0),vec(145,145,145),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(72,72,72),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(112,127,0),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255))
    Hologram[ "alpha", array ] = array
    Hologram[ "material", array ] = array("phoenix_storms/fender_chrome","phoenix_storms/mrref2","phoenix_storms/concrete1","phoenix_storms/fender_chrome","phoenix_storms/mrref2","phoenix_storms/fender_chrome","phoenix_storms/Fender_white","phoenix_storms/pack2/train_floor","phoenix_storms/fender_chrome","phoenix_storms/mrref2","phoenix_storms/mrref2","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","phoenix_storms/mrref2","phoenix_storms/fender_chrome","phoenix_storms/mrref2","phoenix_storms/mrref2","phoenix_storms/mrref2","phoenix_storms/pack2/train_floor","phoenix_storms/mrref2","phoenix_storms/fender_chrome","models/debug/debugwhite","phoenix_storms/fender_chrome","phoenix_storms/mrref2","phoenix_storms/mrref2","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","phoenix_storms/mrref2","phoenix_storms/mrref2","phoenix_storms/Fender_white","","phoenix_storms/fender_chrome","phoenix_storms/mrref2","phoenix_storms/mrref2","phoenix_storms/pack2/train_floor","phoenix_storms/mrref2","","phoenix_storms/mrref2","phoenix_storms/fender_chrome","","phoenix_storms/mrref2","","","phoenix_storms/mrref2","phoenix_storms/Fender_white","phoenix_storms/mrref2","phoenix_storms/mrref2","phoenix_storms/mrref2","phoenix_storms/mrref2","phoenix_storms/pack2/train_floor","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","phoenix_storms/mrref2","phoenix_storms/fender_chrome","phoenix_storms/mrref2","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","phoenix_storms/mrref2","phoenix_storms/mrref2","phoenix_storms/camera","phoenix_storms/mrref2","phoenix_storms/fender_chrome","phoenix_storms/mrref2","phoenix_storms/mrref2","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/fender_chrome","phoenix_storms/mrref2","phoenix_storms/fender_chrome","phoenix_storms/mrref2","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","phoenix_storms/pack2/train_floor","phoenix_storms/Fender_white","phoenix_storms/fender_chrome","phoenix_storms/Fender_white","","phoenix_storms/mrref2","phoenix_storms/Fender_white","phoenix_storms/mrref2","phoenix_storms/Fender_white","phoenix_storms/mrref2","phoenix_storms/pack2/train_floor","phoenix_storms/mrref2","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","","phoenix_storms/mrref2","phoenix_storms/mrref2","phoenix_storms/mrref2","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","phoenix_storms/mrref2","","phoenix_storms/mrref2","phoenix_storms/fender_chrome","","phoenix_storms/fender_chrome","phoenix_storms/mrref2","phoenix_storms/camera","phoenix_storms/mrref2","phoenix_storms/mrref2","phoenix_storms/mrref2","","phoenix_storms/Fender_white","phoenix_storms/mrref2","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","phoenix_storms/mrref2","phoenix_storms/fender_chrome","phoenix_storms/Fender_white","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","","phoenix_storms/fender_chrome","phoenix_storms/pack2/train_floor")
    Hologram[ "skin", array ] = array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
    Hologram[ "parent", array ] = array(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
    Hologram[ "note", array ] = array("","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","")

    function buffer( ) {
        local Next = Hologram[ "next", number ]
        for( I = Next, Next + clamp( holoRemainingSpawns( ), 0, Hologram[ "model", array ]:count( ) - Next + 1 ) ) {
            holoCreate(
                I,
                entity():toWorld(Hologram["position", array][I, vector]),
                Hologram["scale", array][I, vector],
                entity():toWorld(Hologram["angle", array][I, angle]),
                vec4(Hologram["color", array][I, vector],
                Hologram["alpha", array ][I,number]),
                Hologram["model", array][I, string]
            )
            holoMaterial(I, Hologram["material", array][I, string])
            Hologram[ "next", number ] = I
        }
        if( Next <= Hologram[ "model", array ]:count( ) ) { timer( "buffer", 0.1 )
        } else {
            for( I = 1, Hologram[ "model", array ]:count( ) ) {holoParent(I, Hologram["parent", array][I, number]) }
            interval( 100 ) }
    } buffer( )
}

if( clk( "buffer" ) ) { buffer( ) } elseif( clk( ) ) {
    interval( 60 )

}





