# ----------------------------------------------------------------------------------------------------------------------------- #
# ____                                      __          __  __          ___                                                     #
#/\  _ `.                                  /\ \        /\ \/\ \        /\_ \                                                    #
#\ \ \/\ \  _ __    __     __      ___ ___ \ \/ ____   \ \ \_\ \    ___\//\ \     ___      __   _ __    __      ___ ___         #
# \ \ \ \ \/\`'__\/'__`\ /'__`\  /' __` __`\\/ /',__\   \ \  _  \  / __`\\ \ \   / __`\  /'_ `\/\`'__\/'__`\  /' __` __`\       #
#  \ \ \_\ \ \ \//\  __//\ \ \.\_/\ \/\ \/\ \ /\__, `\   \ \ \ \ \/\ \ \ \\_\ \_/\ \ \ \/\ \ \ \ \ \//\ \ \.\_/\ \/\ \/\ \      #
#   \ \____/\ \_\\ \____\ \__/.\_\ \_\ \_\ \_\\/\____/    \ \_\ \_\ \____//\____\ \____/\ \____ \ \_\\ \__/.\_\ \_\ \_\ \_\     #
#    \/___/  \/_/ \/____/\/__/\/_/\/_/\/_/\/_/ \/___/      \/_/\/_/\/___/ \/____/\/___/  \/___ \ \/_/ \/__/\/_/\/_/\/_/\/_/     #
#                                                                                          /\____/                              #
#                                                                                          \_/__/                               #
# ----------------------------------------------------------------------------------------------------------------------------- #
# Modeler Version: v5.1
# Date: 1/11/2019 @ 2312
# Holograms: 
# Notes: 
# --------------------------------------------- #
@name copy_1004483
@inputs 
@outputs 
@persist Hologram:table

##include "lib/dream"

if( first( ) ) {

    Hologram = table()
    Hologram[ "model", array ] = array("models/hunter/plates/plate025x1.mdl","models/sprops/trans/wheel_a/wheel50.mdl","models/sprops/cylinders/size_5/cylinder_12x144.mdl","models/sprops/trans/wheel_a/wheel50.mdl","models/hunter/plates/plate3x16.mdl","models/hunter/plates/plate025x075.mdl","models/sprops/trans/wheel_a/wheel50.mdl","models/sprops/trans/wheel_a/wheel50.mdl","models/hunter/plates/plate05x1.mdl","models/hunter/plates/plate3x8.mdl","models/sprops/misc/fittings/bend_long_90_12.mdl","models/hunter/plates/plate025x175.mdl","models/hunter/plates/plate025x1.mdl","models/hunter/blocks/cube075x1x025.mdl","models/hunter/plates/plate025x125.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate1.mdl","models/hunter/blocks/cube05x1x025.mdl","models/hunter/blocks/cube025x125x025.mdl","models/hunter/plates/plate3x8.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/tubes/tube2x2x1c.mdl","models/maxofs2d/construct_sign.mdl","models/hunter/plates/plate3x7.mdl","models/hunter/plates/plate025x1.mdl","models/hunter/tubes/tube4x4x1d.mdl","models/hunter/plates/plate025x05.mdl","models/hunter/plates/plate025x175.mdl","models/hunter/plates/plate025x05.mdl","models/hunter/plates/plate1x2.mdl","models/props_c17/furnituresink001a.mdl","models/hunter/plates/plate025x05.mdl","models/hunter/plates/plate025x1.mdl","models/hunter/plates/plate025x1.mdl","models/hunter/plates/plate025x150.mdl","models/hunter/tubes/tube2x2x1c.mdl","models/hunter/plates/plate075x105.mdl","models/hunter/blocks/cube05x3x025.mdl","models/hunter/plates/plate075x105.mdl","models/hunter/plates/plate2x8.mdl","models/hunter/plates/plate025x075.mdl","models/hunter/plates/plate075x105.mdl","models/sprops/trans/wheel_a/wheel50.mdl","models/hunter/tubes/tube4x4x1d.mdl","models/hunter/plates/plate2x3.mdl","models/hunter/plates/plate2x3.mdl","models/hunter/plates/plate1x2.mdl","models/hunter/plates/plate025x175.mdl","models/hunter/plates/plate2x5.mdl","models/hunter/blocks/cube05x1x025.mdl","models/maxofs2d/construct_sign.mdl","models/hunter/plates/plate05.mdl","models/sprops/cylinders/size_5/cylinder_12x144.mdl","models/sprops/trans/misc/fork_1.mdl","models/hunter/plates/plate025x05.mdl","models/hunter/plates/plate075x105.mdl","models/hunter/plates/plate025x175.mdl","models/hunter/plates/plate2x8.mdl","models/sprops/trans/wheel_a/wheel50.mdl","models/hunter/tubes/tube4x4x1d.mdl","models/sprops/trans/wheel_a/wheel50.mdl","models/hunter/tubes/tube4x4x1d.mdl","models/hunter/blocks/cube05x3x025.mdl","models/hunter/plates/plate2x3.mdl","models/sprops/trans/wheel_a/wheel50.mdl","models/nova/chair_office02.mdl","models/hunter/plates/plate025x125.mdl","models/hunter/plates/plate2x8.mdl","models/hunter/plates/plate05x1.mdl","models/sprops/trans/misc/bucket_2.mdl","models/hunter/tubes/tube4x4x1d.mdl","models/hunter/plates/plate025x025.mdl","models/hunter/plates/plate025x125.mdl","models/hunter/plates/plate025x3.mdl","models/props_lab/huladoll.mdl","models/hunter/plates/plate1x3.mdl","models/hunter/plates/plate05x1.mdl","models/hunter/plates/plate075x105.mdl","models/hunter/plates/plate05x2.mdl","models/hunter/plates/plate025x1.mdl","models/hunter/plates/plate025x3.mdl","models/hunter/plates/plate025x175.mdl","models/hunter/plates/plate05x1.mdl","models/hunter/plates/plate05x2.mdl","models/hunter/blocks/cube025x3x025.mdl","models/hunter/blocks/cube075x1x025.mdl","models/hunter/plates/plate025x1.mdl","models/hunter/plates/plate025x1.mdl","models/sprops/misc/fittings/bend_long_90_12.mdl","models/hunter/plates/plate025x150.mdl","models/hunter/plates/plate025x1.mdl","models/hunter/plates/plate1x2.mdl","models/sprops/trans/wheel_a/wheel50.mdl","models/hunter/plates/platehole2x2.mdl","models/hunter/plates/plate05.mdl","models/hunter/plates/plate2x8.mdl","models/hunter/plates/plate025.mdl","models/hunter/plates/plate075x105.mdl","models/sprops/trans/wheel_a/wheel50.mdl","models/hunter/plates/plate025x125.mdl")
    Hologram[ "position", array ] = array(vec(33.1924,339.2222,117.229),vec(122.1992,167.9727,25.4688),vec(-13.4517,289.2646,106.3291),vec(-4.1445,378.5215,25.4688),vec(63.9639,-156.1348,77.2881),vec(2.6855,314.0234,117.5806),vec(0.3931,-411.5381,25.4688),vec(-0.1577,165.6309,25.4688),vec(79.4966,327.3618,120.645),vec(63.4805,-13.7861,169.6621),vec(121.9604,291.5874,21.2275),vec(-9.6538,228.6147,86.2002),vec(139.4902,258.7544,126.9087),vec(38.1895,419.0366,42.1045),vec(91.2139,-528.1533,51.166),vec(82.7227,74.4805,37.0771),vec(57.6235,346.8423,97.4775),vec(74.4497,419.895,70.5879),vec(64.5859,410.5664,79.5752),vec(63.4873,-343.1064,171.6245),vec(120.2817,414.5596,44.8242),vec(105.6992,380.8418,13.0986),vec(-4.7505,-139.6367,133.4185),vec(59.5156,245.7925,35.9424),vec(-20.9224,255.7139,126.8818),vec(118.6646,-452.5664,-18.2979),vec(108.3076,418.8647,44.8955),vec(-19.876,274.8896,81.9023),vec(108.4175,411.8389,49.4922),vec(60.6255,299.7764,120.5376),vec(61.7793,196.8037,56.9551),vec(4.353,409.8662,49.4746),vec(107.8657,337.3735,96.7803),vec(7.7109,335.4751,96.7637),vec(95.2559,385.8638,80.3477),vec(8.2573,378.9946,13.083),vec(142.0347,249.4585,75.8438),vec(116.3892,266.0796,28.2109),vec(101.2646,383.2314,57.333),vec(-7.3452,-12.666,122.9634),vec(113.6929,316.1143,117.5991),vec(-23.0937,246.3286,75.8164),vec(123.3838,102.9785,25.4688),vec(63.4014,-454.2256,143.7456),vec(63.897,226.542,81.4014),vec(63.8535,176.6304,122.4331),vec(110.5537,330.1611,59.3838),vec(137.9106,234.4165,82.5977),vec(59.1514,191.9077,39.2988),vec(37.9854,419.1978,70.582),vec(132.4458,-231.0098,129.1777),vec(7.6377,-536.4639,76.4199),vec(130.7607,291.979,106.3525),vec(60.8066,185.085,64.2031),vec(4.1992,416.8857,44.8789),vec(12.5835,381.5444,57.3184),vec(137.7334,277.8711,81.9277),vec(135.9282,-344.6006,125.3306),vec(0.3672,-496.5557,25.4688),vec(9.9883,-452.6592,-18.3242),vec(127.9658,-411.4473,25.4688),vec(116.7593,136.1484,-30.6123),vec(1.9185,263.9038,28.1924),vec(64.3589,-534.2295,127.2119),vec(1.1216,100.6436,25.4688),vec(34.0303,303.8428,52.0967),vec(38.8794,350.7041,83.3418),vec(135.019,-12.5596,122.9971),vec(101.0439,308.355,120.7847),vec(61.6055,156.9229,40.7422),vec(6.4922,134.0576,-30.6299),vec(-7.605,412.1294,44.8027),vec(76.147,351.4102,83.3486),vec(62.2402,274.3916,126.4272),vec(56.0244,420.7803,85.5322),vec(62.7261,247.293,129.8013),vec(15.6201,306.7358,120.7705),vec(31.3999,384.5732,83.0625),vec(-9.9331,280.7612,83.0742),vec(82.2554,340.1328,117.2368),vec(64.5239,-534.5283,29.7471),vec(-18.4062,231.4531,82.5723),vec(36.4321,326.5396,120.6382),vec(127.5737,283.3672,83.0967),vec(39.541,431.2046,15.2793),vec(74.2603,419.7139,42.1104),vec(-1.4219,289.25,98.7363),vec(-11.2065,246.1304,129.7358),vec(-4.6147,289.1821,21.207),vec(18.4795,384.4023,80.335),vec(118.7427,291.5278,98.7559),vec(5.3101,328.166,59.3662),vec(118.0962,380.8833,25.4688),vec(68.5664,-457.1006,53.1143),vec(120.8931,-536.374,76.4463),vec(-7.7178,-344.7168,125.2964),vec(40.0479,73.665,37.0703),vec(82.3384,385.5386,83.0713),vec(128.1309,-496.4434,25.4688),vec(37.8125,-528.2021,51.1523))
    Hologram[ "angle", array ] = array(ang(45.1624,105.3214,0.0445),ang(-81.2367,-88.8296,179.8295),ang(0.1233,136.123,0.1102),ang(-79.2612,-90.2335,-178.5376),ang(0.0263,-179.9545,0.387),ang(45.0513,166.3432,0.2223),ang(-70.9394,-90.0974,-179.913),ang(-76.6666,-88.9332,-179.915),ang(0.1436,79.2498,-0.3942),ang(0.0136,-179.9627,0.3839),ang(89.8346,-85.655,-86.7788),ang(0.0097,-178.9631,-89.8349),ang(44.992,1.5307,-0.2336),ang(89.8345,-85.6226,-176.7145),ang(0.3843,90.0452,89.9863),ang(-0.1651,-88.9646,0.0096),ang(-1.005,1.9638,-74.4792),ang(89.8346,-85.6207,-176.7075),ang(-45.0094,1.224,-0.2335),ang(0.0103,-179.5893,0.3837),ang(89.8346,-85.6198,-86.7196),ang(89.8346,-85.6198,-86.7176),ang(0.0136,-179.9385,0.3843),ang(-0.0133,1.1459,-0.0857),ang(45.011,-179.3591,0.2334),ang(45.3843,90.0356,-90.0194),ang(89.8345,-85.6226,-176.7045),ang(-0.1517,-109.9431,90.0489),ang(0.1651,91.0838,-0.0095),ang(0.1651,91.1579,-0.0093),ang(-5.6098,89.153,-2.7829),ang(0.1651,91.0879,-0.0095),ang(7.6861,-30.7985,-77.4694),ang(7.7022,-147.0279,77.4798),ang(18.817,2.3336,-2.8386),ang(89.8346,-85.6215,93.3046),ang(-0.165,-88.2548,-89.9914),ang(89.8347,-85.932,-88.0178),ang(89.8002,-47.4474,-52.7423),ang(89.6283,-88.0513,91.9025),ang(45.0332,15.8238,-0.2292),ang(-0.1648,-89.5734,90.0108),ang(-75.6233,-88.7838,179.9292),ang(-44.6157,90.0558,89.9809),ang(89.8347,-85.6327,3.2815),ang(89.6272,-87.9773,-178.0236),ang(-89.8352,112.1369,-98.3469),ang(-0.1099,-133.9406,-89.8766),ang(0.01,-179.1031,0.165),ang(89.8347,-85.6328,-176.7176),ang(-0.0138,0.0156,-0.3843),ang(-0.3842,-89.9543,0.0136),ang(0.1099,46.0487,-0.1234),ang(-0.3044,-88.8562,-0.4886),ang(89.8346,-85.6347,-176.7245),ang(89.8122,-126.0596,57.0641),ang(-0.1584,-67.8851,-90.0314),ang(89.6238,-87.8951,-87.9395),ang(-70.2782,-90.0627,-179.9492),ang(44.6157,-89.9453,-89.9808),ang(-71.2024,-90.0354,-179.8109),ang(44.6487,-88.8237,-89.996),ang(89.8347,-85.322,94.5922),ang(89.6202,-88.002,1.9522),ang(-70.192,-88.8948,-179.9535),ang(-0.0095,1.0779,-0.1664),ang(-1.2578,105.4801,-1.8881),ang(89.6285,-87.6857,-87.7319),ang(0.0379,15.0248,-0.1654),ang(0.142,91.0913,179.989),ang(45.3513,90.982,-90.0229),ang(89.8347,-85.6336,93.2946),ang(-1.2625,76.692,1.8699),ang(45.1652,91.0653,-0.0135),ang(45.1651,91.0764,-0.0134),ang(-0.165,-88.9144,0.0095),ang(0.0563,167.147,0.1608),ang(1.4991,-178.3681,2.2054),ang(0.0113,-179.5601,90.1649),ang(45.1577,76.832,-0.0704),ang(89.6154,-87.9218,2.033),ang(-0.1233,-43.8881,89.8899),ang(0.1475,102.9218,0.3753),ang(-0.0076,1.7318,-90.1651),ang(0.1651,91.0828,-0.0095),ang(89.8347,-85.638,-176.7177),ang(0.165,91.0738,-90.0095),ang(-0.0094,1.0908,-0.165),ang(89.8347,-85.6031,93.3492),ang(18.8359,179.838,2.8382),ang(0.165,91.0978,89.9906),ang(-89.841,76.4102,91.9717),ang(-66.8289,90.6312,0.685),ang(-0.3843,-89.9554,0.0136),ang(-0.3842,-89.9552,0.0136),ang(89.6254,-89.0249,90.928),ang(-0.165,-88.8637,0.0093),ang(1.4802,0.5395,-2.205),ang(-70.6661,-89.9439,-179.947),ang(0.3843,90.0452,-90.0136))
    Hologram[ "scale", array ] = array(vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1))
    Hologram[ "color", array ] = array(vec(72,72,72),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(145,145,145),vec(72,72,72),vec(255,255,255),vec(255,255,255),vec(72,72,72),vec(255,93,0),vec(255,255,255),vec(72,72,72),vec(72,72,72),vec(255,255,255),vec(72,72,72),vec(255,0,0),vec(72,72,72),vec(255,255,255),vec(255,255,255),vec(255,93,0),vec(72,72,72),vec(72,72,72),vec(255,255,255),vec(0,0,0),vec(72,72,72),vec(72,72,72),vec(255,255,255),vec(72,72,72),vec(72,72,72),vec(72,72,72),vec(255,255,255),vec(72,72,72),vec(72,72,72),vec(72,72,72),vec(255,93,0),vec(72,72,72),vec(72,72,72),vec(72,72,72),vec(255,93,0),vec(255,93,0),vec(72,72,72),vec(72,72,72),vec(255,255,255),vec(72,72,72),vec(72,72,72),vec(72,72,72),vec(255,93,0),vec(72,72,72),vec(255,93,0),vec(255,255,255),vec(255,255,255),vec(255,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,93,0),vec(72,72,72),vec(255,93,0),vec(255,255,255),vec(72,72,72),vec(255,255,255),vec(72,72,72),vec(72,72,72),vec(72,72,72),vec(255,255,255),vec(255,255,255),vec(72,72,72),vec(255,93,0),vec(72,72,72),vec(255,255,255),vec(72,72,72),vec(72,72,72),vec(72,72,72),vec(72,72,72),vec(255,255,255),vec(72,72,72),vec(72,72,72),vec(255,93,0),vec(72,72,72),vec(72,72,72),vec(255,255,255),vec(72,72,72),vec(72,72,72),vec(72,72,72),vec(72,72,72),vec(255,255,255),vec(72,72,72),vec(72,72,72),vec(255,255,255),vec(255,93,0),vec(72,72,72),vec(255,93,0),vec(255,255,255),vec(72,72,72),vec(255,0,0),vec(255,93,0),vec(255,0,0),vec(255,93,0),vec(255,255,255),vec(72,72,72))
    Hologram[ "alpha", array ] = array(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255)
    Hologram[ "material", array ] = array("phoenix_storms/Fender_white","","phoenix_storms/fender_chrome","","phoenix_storms/Fender_white","phoenix_storms/Fender_white","","","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/fender_chrome","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/fender_chrome","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/fender_chrome","phoenix_storms/fender_chrome","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/fender_chrome","","phoenix_storms/Fender_white","phoenix_storms/fender_chrome","","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","","phoenix_storms/Fender_white","","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","","","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/fender_chrome","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/stripes","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/fender_chrome","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/fender_chrome","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","phoenix_storms/Fender_white","","phoenix_storms/Fender_white")
    Hologram[ "skin", array ] = array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
    Hologram[ "parent", array ] = array(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
    Hologram[ "note", array ] = array("","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","")

    function buffer( ) {
        local Next = Hologram[ "next", number ]
        for( I = Next, Next + clamp( holoRemainingSpawns( ), 0, Hologram[ "model", array ]:count( ) - Next + 1 ) ) {
            holoCreate(
                I,
                entity():toWorld(Hologram["position", array][I, vector]),
                Hologram["scale", array][I, vector],
                entity():toWorld(Hologram["angle", array][I, angle]),
                vec4(Hologram["color", array][I, vector],
                Hologram["alpha", array ][I,number]),
                Hologram["model", array][I, string]
            )
            holoMaterial(I, Hologram["material", array][I, string])
            Hologram[ "next", number ] = I
        }
        if( Next <= Hologram[ "model", array ]:count( ) ) { timer( "buffer", 0.1 )
        } else {
            for( I = 1, Hologram[ "model", array ]:count( ) ) {holoParent(I, Hologram["parent", array][I, number]) }
            interval( 100 ) }
    } buffer( )
}

if( clk( "buffer" ) ) { buffer( ) } elseif( clk( ) ) {
    interval( 60 )

}





