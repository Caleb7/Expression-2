######################################
# Exported by Dream's Hologram Modeler
# Version: 5.1
# Date: 1/18/2019 @ 050
# Holograms: 6
# Notes: 
######################################
@name ufo2
@persist Hologram:table

if( first( ) ) {
    
    Hologram = table()
    Hologram[ "model", array ] = array("models/holograms/hq_sphere.mdl","models/holograms/hq_sphere.mdl","models/holograms/hq_sphere.mdl","models/holograms/hq_sphere.mdl","models/holograms/hq_torus.mdl","models/holograms/hq_torus.mdl")
    Hologram[ "position", array ] = array(vec(0,0,59.3027),vec(0,0,59.3027),vec(0,0,59.3027),vec(0,0,59.3027),vec(0,0,60.2988),vec(0,0,58.207))
    Hologram[ "angle", array ] = array(ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(0,0,0))
    Hologram[ "scale", array ] = array(vec(1,1,0.2),vec(-1.05,-1.05,-0.25),vec(0.4,0.4,0.4),vec(-0.44,-0.44,-0.44),vec(0.4,0.4,0.4),vec(0.4,0.4,0.4))
    Hologram[ "color", array ] = array(vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(0,0,0))
    Hologram[ "alpha", array ] = array(255,255,255,255,255,255)
    Hologram[ "material", array ] = array("","","","","","")
    Hologram[ "parent", array ] = array(1,2,3,4,5,6)
    Hologram[ "note", array ] = array("","","","","","")

    function buffer() {
        local Next = Hologram[ "next", number ]
        for( I = Next, Next + clamp( holoRemainingSpawns( ), 0, Hologram[ "model", array ]:count( ) - Next + 1 ) ) {
            holoCreate(
                I,
                entity():toWorld(Hologram["position", array][I, vector]),
                Hologram["scale", array][I, vector],
                entity():toWorld(Hologram["angle", array][I, angle]),
                vec4(Hologram["color", array][I, vector],
                Hologram["alpha", array ][I,number]),
                Hologram["model", array][I, string]
            )
            holoMaterial(I, Hologram["material", array][I, string])
            holoParent(I, Hologram["parent", array][I, number])
            Hologram[ "next", number ] = I
        }
        if( Next <= Hologram[ "model", array ]:count( ) ) {
            timer( "buffer", 0.1 )
            return
        }
    }
    buffer( )
}

if( clk( "buffer" ) ) {
    buffer()
}
