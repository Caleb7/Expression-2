########################################
# Exported by Dream's Hologram Modeler
# Date: 12/20/2019 @ 1326
# Holograms: 125
# World: [-811.63757324219,-59.585525512695,-12767.71875]
# Notes: 
########################################
@name drone
@persist Hologram:table Time [Parent Body ]:entity
@persist [ PivotA PivotB PivotC PivotD ]:number
@persist [ AimA AimB AimC AimD ]:number
@persist LaserIndex:number Laser:array Target:entity Mode:number
@model models/sprops/rectangles/size_2_5/rect_18x18x3.mdl

if( first( ) ) {
    
    Parent = findPlayerByName( "Dream" )
    Hologram = table()
    Hologram[ "model", array ] = array("models/holograms/cube.mdl","models/hunter/blocks/cube025x025x025.mdl","models/hunter/blocks/cube025x025x025.mdl","models/hunter/tubes/tube2x2x025b.mdl","models/hunter/tubes/tube2x2x025b.mdl","models/hunter/tubes/tube2x2x025b.mdl","models/hunter/tubes/tube2x2x025b.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/sprops/trans/air/prop_5b_s.mdl","models/sprops/trans/air/prop_5b_s.mdl","models/sprops/trans/air/prop_5b_s.mdl","models/sprops/trans/air/prop_5b_s.mdl","models/sprops/trans/air/pcone_5b_s.mdl","models/sprops/trans/air/pcone_5b_s.mdl","models/sprops/trans/air/pcone_5b_s.mdl","models/sprops/trans/air/pcone_5b_s.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_cylinder.mdl","models/sprops/trans/misc/shock_2.mdl","models/sprops/trans/misc/shock_2.mdl","models/sprops/trans/misc/shock_2.mdl","models/sprops/trans/misc/shock_2.mdl","models/jaanus/wiretool/wiretool_controlchip.mdl","models/jaanus/wiretool/wiretool_controlchip.mdl","models/cheeze/wires/cpu.mdl","models/cyborgmatt/capacitor_large.mdl","models/cyborgmatt/capacitor_large.mdl","models/cyborgmatt/capacitor_large.mdl","models/cheeze/wires/wireless_card.mdl","models/cheeze/wires/ram.mdl","models/cheeze/wires/ram.mdl","models/cheeze/wires/mini_chip.mdl","models/cheeze/wires/mini_chip.mdl","models/cheeze/wires/mini_chip.mdl","models/kobilica/transistor.mdl","models/kobilica/transistor.mdl","models/jaanus/wiretool/wiretool_gate.mdl","models/items/boxflares.mdl","models/items/boxflares.mdl","models/holograms/hq_rcube.mdl","models/holograms/cube.mdl","models/holograms/hq_cylinder.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_torus.mdl","models/holograms/hq_torus.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_cone.mdl","models/holograms/hq_hdome_thin.mdl","models/holograms/hq_hdome_thin.mdl","models/holograms/hq_hdome_thin.mdl","models/holograms/hq_hdome_thin.mdl","models/holograms/hq_hdome_thin.mdl","models/items/combine_rifle_ammo01.mdl","models/items/combine_rifle_ammo01.mdl","models/holograms/hq_torus_thick.mdl","models/holograms/cube.mdl","models/holograms/hq_cylinder.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_torus.mdl","models/holograms/hq_torus.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_cone.mdl","models/holograms/hq_hdome_thin.mdl","models/holograms/hq_hdome_thin.mdl","models/holograms/hq_hdome_thin.mdl","models/holograms/hq_hdome_thin.mdl","models/holograms/hq_hdome_thin.mdl","models/items/combine_rifle_ammo01.mdl","models/items/combine_rifle_ammo01.mdl","models/holograms/hq_torus_thick.mdl","models/holograms/cube.mdl","models/holograms/hq_cylinder.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_torus.mdl","models/holograms/hq_torus.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_cone.mdl","models/holograms/hq_hdome_thin.mdl","models/holograms/hq_hdome_thin.mdl","models/holograms/hq_hdome_thin.mdl","models/holograms/hq_hdome_thin.mdl","models/holograms/hq_hdome_thin.mdl","models/items/combine_rifle_ammo01.mdl","models/items/combine_rifle_ammo01.mdl","models/holograms/hq_torus_thick.mdl","models/holograms/cube.mdl","models/holograms/hq_cylinder.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_torus.mdl","models/holograms/hq_torus.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_cone.mdl","models/holograms/hq_hdome_thin.mdl","models/holograms/hq_hdome_thin.mdl","models/holograms/hq_hdome_thin.mdl","models/holograms/hq_hdome_thin.mdl","models/holograms/hq_hdome_thin.mdl","models/items/combine_rifle_ammo01.mdl","models/items/combine_rifle_ammo01.mdl","models/holograms/hq_torus_thick.mdl")
    Hologram[ "position", array ] = array(vec(0,0,61.4609),vec(0,0,61.4609),vec(0,0,61.4609),vec(0,-32.7928,61.4609),vec(0,32.7928,61.4609),vec(32.7872,0,61.4609),vec(-32.7872,0,61.4609),vec(0,-32.7928,61.4609),vec(0,32.7928,61.4609),vec(32.7872,0,61.4609),vec(-32.7872,0,61.4609),vec(0,-32.7928,61.4609),vec(0,32.7928,61.4609),vec(32.7872,0,61.4609),vec(-32.7872,0,61.4609),vec(0,-32.7928,61.4609),vec(0,32.7928,61.4609),vec(32.7872,0,61.4609),vec(-32.7872,0,61.4609),vec(0,-32.7928,59.0586),vec(0,32.7928,59.0586),vec(32.7872,0,59.0586),vec(-32.7872,0,59.0586),vec(0,0,55.8555),vec(0,0,55.8555),vec(0,0,55.8555),vec(0,0,55.8555),vec(7.9274,5.4416,62.6133),vec(7.9274,-5.4416,62.6133),vec(2.2419,-7.4416,62.6133),vec(3.9648,-3.4804,62.6133),vec(3.9648,-1.078,62.6133),vec(3.9648,1.3244,62.6133),vec(-0.08,9.254,66.0508),vec(1.7618,2.5664,62.5742),vec(0.7208,2.5664,62.5742),vec(-8.9687,-8.9256,62.6133),vec(-8.9687,-6.16,62.6133),vec(-8.9687,-3.3204,62.6133),vec(-8.6484,9.09,63.5313),vec(4.1252,6.008,63.5313),vec(-5.8848,2.9688,62.6133),vec(-3.3632,-6.242,62.8086),vec(-4.9648,-6.242,62.8086),vec(0,0,64.6641),vec(0,-32.5996,53.8906),vec(0,-32.5996,53.8906),vec(0,-35.8204,52.3867),vec(0,-29.3788,52.3867),vec(0,-37.3296,48.7344),vec(0,-27.8696,48.7344),vec(0,-32.5996,46.332),vec(0,-32.5996,46.332),vec(0,-36.9996,46.332),vec(0,-28.1996,46.332),vec(0,-32.5996,46.332),vec(-6.8,-32.5996,46.332),vec(-6.4,-32.5996,46.332),vec(-7.84,-32.5996,46.332),vec(-8.9,-32.5996,46.332),vec(-9.98,-32.5996,46.332),vec(-10.7002,-32.5996,46.332),vec(0.4399,-32.5996,46.332),vec(7.0602,-32.5996,46.332),vec(4.9202,-32.5996,46.332),vec(0,32.5996,53.8906),vec(0,32.5996,53.8906),vec(0,29.3788,52.3867),vec(0,35.8204,52.3867),vec(0,27.8694,48.7344),vec(0,37.3296,48.7344),vec(0,32.5996,46.332),vec(0,32.5996,46.332),vec(0,28.1996,46.332),vec(0,36.9996,46.332),vec(0,32.5996,46.332),vec(-6.8,32.5996,46.332),vec(-6.4,32.5996,46.332),vec(-7.84,32.5996,46.332),vec(-8.9,32.5996,46.332),vec(-9.98,32.5996,46.332),vec(-10.7002,32.5996,46.332),vec(0.4399,32.5996,46.332),vec(7.0602,32.5996,46.332),vec(4.9202,32.5996,46.332),vec(32.6,0,53.8906),vec(32.6,0,53.8906),vec(32.6,-3.2208,52.3867),vec(32.6,3.2208,52.3867),vec(32.6,-4.73,48.7344),vec(32.6,4.73,48.7344),vec(32.6,0,46.332),vec(32.6,0,46.332),vec(32.6,-4.4,46.332),vec(32.6,4.4,46.332),vec(32.6,0,46.332),vec(25.8,0,46.332),vec(26.2,0,46.332),vec(24.76,0,46.332),vec(23.7,0,46.332),vec(22.62,0,46.332),vec(21.8998,0,46.332),vec(33.04,0,46.332),vec(39.6602,0,46.332),vec(37.5201,0,46.332),vec(-32.6,0,53.8906),vec(-32.6,0,53.8906),vec(-32.6,-3.2208,52.3867),vec(-32.6,3.2208,52.3867),vec(-32.6,-4.73,48.7344),vec(-32.6,4.73,48.7344),vec(-32.6,0,46.332),vec(-32.6,0,46.332),vec(-32.6,-4.4,46.332),vec(-32.6,4.4,46.332),vec(-32.6,0,46.332),vec(-39.4,0,46.332),vec(-39,0,46.332),vec(-40.4399,0,46.332),vec(-41.5,0,46.332),vec(-42.58,0,46.332),vec(-43.3002,0,46.332),vec(-32.16,0,46.332),vec(-25.5398,0,46.332),vec(-27.6798,0,46.332))
    Hologram[ "angle", array ] = array(ang(0,0,0),ang(0,45,0),ang(0,-45,0),ang(0,45,0),ang(0,-135,0),ang(0,135,0),ang(0,-45,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(90,0,0),ang(89.9999,0,0),ang(89.9999,0,0),ang(89.9999,0,0),ang(0,45,0),ang(0,45,0),ang(0,45,0),ang(0,45,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(90,0,0),ang(90,90,0),ang(90,-180,0),ang(90,-90,0),ang(0,-180,0),ang(0,-180,0),ang(0,-180,0),ang(0,-180,0),ang(0,-180,0),ang(0,-179.9999,0),ang(0,-180,90),ang(0,-180,0),ang(0,-180,0),ang(0,-180,0),ang(0,-180,0),ang(0,-179.9999,0),ang(0,0,0),ang(0,0,0),ang(0,-180,0),ang(0,90,0),ang(0,90,0),ang(0,-180,-180),ang(0,-180,-180),ang(0,-180,-180),ang(45,90,-180),ang(-45,90,-180),ang(0,90,-180),ang(0,90,-180),ang(0,-180,-180),ang(-90,0,0),ang(-90,-90,0),ang(-90,-90,0),ang(-90,-90,0),ang(-90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(-90,0,0),ang(-90,0,0),ang(-90,0,0),ang(0,-180,-180),ang(0,-180,-180),ang(45,90,-180),ang(-45,90,-180),ang(0,90,-180),ang(0,90,-180),ang(0,-180,-180),ang(-90,0,0),ang(-90,-90,0),ang(-90,-90,0),ang(-90,-90,0),ang(-90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(-90,0,0),ang(-90,0,0),ang(-90,0,0),ang(0,-180,-180),ang(0,-180,-180),ang(45,90,-180),ang(-45,90,-180),ang(0,90,-180),ang(0,90,-180),ang(0,-180,-180),ang(-90,0,0),ang(-90,-90,0),ang(-90,-90,0),ang(-90,-90,0),ang(-90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(-90,0,0),ang(-90,0,0),ang(-90,0,0),ang(0,-180,-180),ang(0,-180,-180),ang(45,90,-180),ang(-45,90,-180),ang(0,90,-180),ang(0,90,-180),ang(0,-180,-180),ang(-90,0,0),ang(-90,-90,0),ang(-90,-90,0),ang(-90,-90,0),ang(-90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(-90,0,0),ang(-90,0,0),ang(-90,0,0))
    Hologram[ "scale", array ] = array(vec(1.76,1.76,0.2),vec(4,0.16,0.16),vec(4,0.16,0.16),vec(0.5,0.5,0.2),vec(0.5,0.5,0.2),vec(0.5,0.5,0.2),vec(0.5,0.5,0.2),vec(0.12,0.12,0.12),vec(0.12,0.12,0.12),vec(0.12,0.12,0.12),vec(0.12,0.12,0.12),vec(1.12,1.12,1.12),vec(1.12,1.12,1.12),vec(1.12,1.12,1.12),vec(1.12,1.12,1.12),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(0.3,0.3,0.6),vec(0.3,0.3,0.6),vec(0.3,0.3,0.6),vec(0.3,0.3,0.6),vec(1.92,1.92,1.92),vec(1.92,1.92,1.92),vec(1.92,1.92,1.92),vec(1.92,1.92,1.92),vec(1.2,1.2,1.2),vec(1.2,1.2,1.2),vec(1.2,1.2,1.2),vec(0.08,0.08,0.08),vec(0.08,0.08,0.08),vec(0.08,0.08,0.08),vec(1.2,1.2,1.2),vec(0.8,0.8,0.8),vec(0.8,0.8,0.8),vec(1.2,1.2,1.2),vec(1.2,1.2,1.2),vec(1.2,1.2,1.2),vec(0.4,0.4,0.4),vec(0.4,0.4,0.4),vec(1.2,1.2,1.2),vec(0.4,0.4,0.4),vec(0.4,0.4,0.4),vec(1.9,1.9,0.8),vec(0.1,0.1,0.1),vec(0.4,0.4,0.2),vec(0.1,0.2,0.4),vec(0.1,0.2,0.4),vec(0.1,0.2,0.4),vec(0.1,0.2,0.4),vec(0.1,0.1,0.1),vec(0.5,0.5,0.8),vec(0.15,0.15,0.4),vec(0.15,0.15,0.4),vec(0.114,0.114,0.7),vec(0.4,0.4,1),vec(0.7,0.7,0.4),vec(0.54,0.54,0.35),vec(0.4,0.4,0.3),vec(0.3,0.3,0.2),vec(0.2,0.2,0.1),vec(0.4,0.4,1),vec(1,1,1.2),vec(0.55,0.55,0.55),vec(0.1,0.1,0.1),vec(0.4,0.4,0.2),vec(0.1,0.2,0.4),vec(0.1,0.2,0.4),vec(0.1,0.2,0.4),vec(0.1,0.2,0.4),vec(0.1,0.1,0.1),vec(0.5,0.5,0.8),vec(0.15,0.15,0.4),vec(0.15,0.15,0.4),vec(0.114,0.114,0.7),vec(0.4,0.4,1),vec(0.7,0.7,0.4),vec(0.54,0.54,0.35),vec(0.4,0.4,0.3),vec(0.3,0.3,0.2),vec(0.2,0.2,0.1),vec(0.4,0.4,1),vec(1,1,1.2),vec(0.55,0.55,0.55),vec(0.1,0.1,0.1),vec(0.4,0.4,0.2),vec(0.1,0.2,0.4),vec(0.1,0.2,0.4),vec(0.1,0.2,0.4),vec(0.1,0.2,0.4),vec(0.1,0.1,0.1),vec(0.5,0.5,0.8),vec(0.15,0.15,0.4),vec(0.15,0.15,0.4),vec(0.114,0.114,0.7),vec(0.4,0.4,1),vec(0.7,0.7,0.4),vec(0.54,0.54,0.35),vec(0.4,0.4,0.3),vec(0.3,0.3,0.2),vec(0.2,0.2,0.1),vec(0.4,0.4,1),vec(1,1,1.2),vec(0.55,0.55,0.55),vec(0.1,0.1,0.1),vec(0.4,0.4,0.2),vec(0.1,0.2,0.4),vec(0.1,0.2,0.4),vec(0.1,0.2,0.4),vec(0.1,0.2,0.4),vec(0.1,0.1,0.1),vec(0.5,0.5,0.8),vec(0.15,0.15,0.4),vec(0.15,0.15,0.4),vec(0.114,0.114,0.7),vec(0.4,0.4,1),vec(0.7,0.7,0.4),vec(0.54,0.54,0.35),vec(0.4,0.4,0.3),vec(0.3,0.3,0.2),vec(0.2,0.2,0.1),vec(0.4,0.4,1),vec(1,1,1.2),vec(0.55,0.55,0.55))
    Hologram[ "color", array ] = array(vec(90,90,90),vec(255,255,255),vec(255,255,255),vec(90,90,90),vec(90,90,90),vec(90,90,90),vec(90,90,90),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,0,0),vec(255,0,0),vec(255,0,0),vec(255,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(90,90,90),vec(90,90,90),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(90,90,90),vec(90,90,90),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(90,90,90),vec(90,90,90),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(90,90,90),vec(90,90,90),vec(255,255,255))
    Hologram[ "alpha", array ] = array
    Hologram[ "material", array ] = array("","","","phoenix_storms/fender_white","phoenix_storms/fender_white","phoenix_storms/fender_white","phoenix_storms/fender_white","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","sprops/textures/sprops_metal5","")
    Hologram[ "parent", array ] = array(1,1,1,1,1,1,1,1,1,1,1,8,9,10,11,8,9,10,11,8,9,10,11,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,46,47,47,47,47,46,52,47,47,47,52,52,52,52,52,52,52,52,52,1,66,67,67,67,67,66,72,67,67,67,72,72,72,72,72,72,72,72,72,1,86,87,87,87,87,86,92,87,87,87,92,92,92,92,92,92,92,92,92,1,106,107,107,107,107,106,112,107,107,107,112,112,112,112,112,112,112,112,112)
    Hologram[ "note", array ] = array("","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","")
    
    Laser[ 1, number ] = 52
    Laser[ 2, number ] = 72
    Laser[ 3, number ] = 92
    Laser[ 4, number ] = 112
    
    function buffer( ) {
        local Next = Hologram[ "next", number ]
        for( I = Next, Next + clamp( holoRemainingSpawns( ), 0, Hologram[ "model", array ]:count( ) - Next ) ) {
            holoCreate(
                I,
                entity():toWorld(Hologram["position", array][I, vector]) - vec(0,0,50),
                Hologram["scale", array][I, vector],
                entity():toWorld(Hologram["angle", array][I, angle]),
                vec4(Hologram["color", array][I, vector],
                Hologram["alpha", array ][I,number]),
                Hologram["model", array][I, string]
            )
            holoMaterial(I, Hologram["material", array][I, string])
            holoParent(I, Hologram["parent", array][I, number])
            Hologram[ "next", number ] = I
        }
        if( Next < Hologram[ "model", array ]:count( ) ) { timer( "buffer", 0.1 ) } else {
            propSpawnUndo( 0 )
            Body = propSpawn( "models/props_phx/construct/glass/glass_plate1x1.mdl", entity():pos(), entity():angles(), 1 )
            Body:soundPlay("motor", 0, "vehicles/airboat/fan_blade_fullthrottle_loop1.wav")
            Body:setAlpha( 0 )
            Body:propFreeze( 0 )
            Body:setMass( 50000 )
            soundVolume( "motor", 0.15 )
            holoParent( 1, Body)
            runOnTick( 1 )
            runOnChat( 1 )
            runOnKeys( owner( ), 1 )
        }
    } buffer( )
    
    function void async( T, F:string, X:entity     ) { timer( format( "cb:%.0f:%s:e:%s",    randint( 1e15 ), F, vonEncode( array( X ) ) ), T * 1000 ) }
    function void async( T, F:string, X:number     ) { timer( format( "cb:%.0f:%s:n:%s",    randint( 1e15 ), F, vonEncode( array( X ) ) ), T * 1000 ) }
    function void async( T, F:string, X:vector     ) { timer( format( "cb:%.0f:%s:v:%s",    randint( 1e15 ), F, vonEncode( array( X ) ) ), T * 1000 ) }
    
    
    function delayFire( Destination:vector ) {
        holoPos( LaserIndex, Destination )
        #local X = propSpawn( "models/props_phx/ball.mdl", Destination, 1 )
        #X:propBreak( )
        holoEntity( 71 ):soundPlay( 1, soundDuration( "weapons/fx/nearmiss/bulletltor12.wav" ), "weapons/fx/nearmiss/bulletltor12.wav" )
    }
    
    function fireLaser( Origin:vector, Destination:vector, Intensity ) {
        if( holoRemainingSpawns( ) >= Intensity ) {
            LaserIndex = randint( 2e8 )
            for( I = LaserIndex, LaserIndex + Intensity ) {
                holoCreate( I, Origin )
                holoAlpha( I, 0 )
                holoParent( I, LaserIndex )
                holoEntity( I ):setTrails( 7 + ( ( I - LaserIndex ) * 7 ), 7 + ( ( I - LaserIndex ) * 7 ), 0.5, "trails/laser", vec( 30, 45, 200 ), 255 )
            }
            local X = propSpawn( "models/props_phx/misc/egg.mdl", Origin, ang(0), 0 )
            X:setAlpha( 0 ), X:setMass( 1 ), X:propGravity( 0 ), X:propFreeze( 0 )
            X:applyForce( ( Destination - Origin ):normalized( ) * X:mass( ) * 5000 )
            #Destination = Destination + ( ( Destination - Origin ):normalized( ) * 10000 )
            async( 0.1, "delayFire", Destination )
            async( 1, "holoDelete", LaserIndex )
        }
    }
    
    function aim( Vector:vector ) {
        for( I = 1, 4 ) {
            Ang = ( Vector - holoEntity( Laser[ I, number ] ):pos() ):toAngle()
            holoAng( Laser[ I, number ], Ang )
            holoAng( Laser[ I, number ] - 6, ( Ang * ang( 0, 1, 0 ) ) + ang( 180, 0, 0 ) )
        }
    }
}

if( clk( "buffer" ) ) { 
    buffer( ) 
}

if( tickClk( ) ) {
    if( !Body:isValid() ) { reset() }
    local V = Parent:shootPos():distance( Body:pos() ) > 450 ? ( Parent:toWorld( vec(0,0,70) ) - Body:pos() ) / 20 : vec(0)
    soundPitch("motor", clamp(Body:vel():length() / 15 + 90, 110, 160))
    Body:applyTorque(Body:inertia() * (rotationVector(inv(quat(Body)) * quat(ang(Body:vel():x(), 0, -Body:vel():y()) / 20)) * 5 - Body:angVelVector()) * 20)
    Body:applyForce( ( Body:mass( ) * -propGravity() * tickInterval( ) - ( Body:vel() * Body:mass() ) / 10 ) + ( V * Body:mass( ) ) )
    Time = realtime( ) * 720
    
    for(I = 12, 15){
        holoAng(I, Body:toWorld(ang(90, Time * -1 ^ I, 0)))
        holoAng(I + 4 , Body:toWorld(ang(0, Time * -1 ^ I + 36, 0)))
    }
    
    if( Mode == 2 ) {
        P = players()
        D = 100000
        Target = owner()
        for( I = 1, P:count() ) {
            Dist = P[ I, entity ]:pos():distance( owner():pos() )
            if( P[ I, entity ] != owner() ) {
                if( Dist < D ) {
                    D = Dist
                    Target = P[ I, entity ]
                }
            }
        }
        aim( Target:shootPos() )
    } elseif( Mode == 1 ) {
        aim( owner():aimPos() )
    }
    
}

if( keyClk( ) ) {
    local Player = keyClk()
    if( owner() == Player ) {
        local Key = keyClkPressed()
        if( Key == "mouse_left" & Player:keyPressed( Key ) == 1 ) {
            if( Mode == 2 ) {
                fireLaser( holoEntity( Laser[ 1, number ] ):pos( ), Target:shootPos(), 5 )
            } elseif( Mode == 1 ) {
                fireLaser( holoEntity( Laser[ 1, number ] ):pos( ), owner():aimPos(), 5 )
            }
        }
    }
}

if( chatClk( ) & lastSpoke( ) == owner( ) ) {
    local Param = owner( ):lastSaid( ):explode(" ")
    if( Param[ 1, string ]:left( 1 ) == "/" ) {
        hideChat( 1 )
        if( Param[ 1, string ] == "/aim") {
            Mode = 1
            #Target = findPlayerByName( Param[ 2, string ] )
            #print( "Target: " + Target:name( ) ) 
        }
        if( Param[ 1, string ] == "/guard" ) {
            Mode = 2
        }
    }
}

if( clkName( ) != "" && !clk( ) ) {
    local Match = clkName( ):match( "^cb:%d+:([^:]+):([%a%d]+):(.*)$" )
    if( Match:count( ) == 3){
        local F = Match[ 1, string ]
        local R = vonDecode( Match[ 3, string ] )
        switch( Match[ 2, string ] ) {
            case "null", F( ), break
            case "e", F( R[ 1, entity ] ), break
            case "n", F( R[ 1, number ] ), break
            case "v", F( R[ 1, vector ] ), break
        }
        exit()
    }
}

